package formularios;

import clases.bdConexion;
import clases.consultas;
import clases.especialista;
import clases.expedientePaciente;
import clases.medicamentos;
import clases.paciente;
import clases.servicios;
import clases.tratamientos;
import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
/**
 *
 * @author laptop-1
 */
public class frmConsultas extends javax.swing.JInternalFrame {

    bdConexion con;    
    consultas consul= new consultas();//instancia clase consultas
    medicamentos med = new medicamentos();//instancia clase medicamentos
    servicios ser = new servicios();
    tratamientos tra = new tratamientos();
    especialista esp = new especialista();
    paciente pa = new paciente();
    expedientePaciente expPaciente= new expedientePaciente(); //instancia a la clase expedientePaciente
    Object[][] dtPacientes; //variable de tipo Object que almacena una matriz de datos
    Object[][] dtCitas;
    Object[][] dtServicios;   
    Object[][] dtTratamientos;   
    Object[][] dtEspecialista;   
    Object[][] dtMedicamentos;
    
    int fila=-1;
    String fechaActual=null;
    
    public frmConsultas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frmBuscarServicio = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtValorBuscarS = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaServicios = new javax.swing.JTable();
        grupoBuscarServicio = new javax.swing.ButtonGroup();
        frmBuscarTratamiento = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txtValorBuscarT = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaTratamientos = new javax.swing.JTable();
        grupoBuscarTratamiento = new javax.swing.ButtonGroup();
        frmBuscarEspecialista = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        txtValorBuscarE = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaEspecialista = new javax.swing.JTable();
        frmTipoConsulta = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        btnAceptarTipoCita = new javax.swing.JButton();
        optTipo2 = new javax.swing.JRadioButton();
        optTipo1 = new javax.swing.JRadioButton();
        frmMostrarCitas = new javax.swing.JDialog();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaCitas = new javax.swing.JTable();
        frmMostrarPacientes = new javax.swing.JDialog();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        txtValorBuscarPaciente = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaPacientes = new javax.swing.JTable();
        grupoBuscarPaciente = new javax.swing.ButtonGroup();
        grupoBuscarCitas = new javax.swing.ButtonGroup();
        grupoTipoConsulta = new javax.swing.ButtonGroup();
        grupoBuscarEspecialista = new javax.swing.ButtonGroup();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        frmBuscarMedicamentos = new javax.swing.JDialog();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        txtValorBuscarM = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablaMedicamentos = new javax.swing.JTable();
        btnGenerarReceta1 = new javax.swing.JButton();
        jXTaskPaneContainer1 = new org.jdesktop.swingx.JXTaskPaneContainer();
        jXTaskPane1 = new org.jdesktop.swingx.JXTaskPane();
        lblNuevo = new javax.swing.JLabel();
        lblCancelar = new javax.swing.JLabel();
        lblGuardar = new javax.swing.JLabel();
        lblCerrar = new javax.swing.JLabel();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabel19 = new javax.swing.JLabel();
        lblNumeroConsulta = new javax.swing.JLabel();
        panelPestanas = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtPais = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        txtNombrePacientes = new javax.swing.JTextField();
        txtIdPaciente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDui = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        txtCelular = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtIdServicio = new javax.swing.JTextField();
        btnBuscarServicio = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtNombreServicio = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtIdTratamiento = new javax.swing.JTextField();
        btnBuscarTratamiento = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtNombreTratamiento = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtPrecioTratamiento = new javax.swing.JTextField();
        jcIC = new javax.swing.JComboBox();
        jcHorariosVencidos = new javax.swing.JComboBox();
        txtTipoConsulta = new javax.swing.JTextField();
        txtNumeroCita = new javax.swing.JTextField();
        txtHoraSistema = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtIdEspecialista = new javax.swing.JTextField();
        btnBuscarEspecialista = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtNombreEspecialista = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDiagnostico = new javax.swing.JTextArea();
        panelReceta = new javax.swing.JTabbedPane();
        jPanel20 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaRecetaMedica = new javax.swing.JTable();
        btnAgregarMedicamento = new javax.swing.JButton();
        txtCodigoMedicamento = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnModificarCantidad = new javax.swing.JButton();
        btnModificarPrecio = new javax.swing.JButton();
        btnQuitarRenglon = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblNumeroReceta = new javax.swing.JLabel();
        btnGenerarReceta = new javax.swing.JButton();

        frmBuscarServicio.setTitle("Servicios");
        frmBuscarServicio.setBounds(new java.awt.Rectangle(300, 200, 530, 330));
        frmBuscarServicio.setModal(true);

        jPanel5.setBackground(java.awt.SystemColor.activeCaption);
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Lista de Servicios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jPanel6.setBackground(java.awt.SystemColor.activeCaption);
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Filtrar Por:"));

        txtValorBuscarS.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtValorBuscarS.setForeground(new java.awt.Color(0, 51, 255));
        txtValorBuscarS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarSKeyTyped(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel24.setText("Nombre del Servicio:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorBuscarS, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addContainerGap())
            .addComponent(txtValorBuscarS)
        );

        tablaServicios.setBackground(new java.awt.Color(255, 255, 204));
        tablaServicios.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        tablaServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaServiciosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaServicios);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout frmBuscarServicioLayout = new javax.swing.GroupLayout(frmBuscarServicio.getContentPane());
        frmBuscarServicio.getContentPane().setLayout(frmBuscarServicioLayout);
        frmBuscarServicioLayout.setHorizontalGroup(
            frmBuscarServicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmBuscarServicioLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        frmBuscarServicioLayout.setVerticalGroup(
            frmBuscarServicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmBuscarServicioLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        frmBuscarTratamiento.setTitle("Tratamientos");
        frmBuscarTratamiento.setBounds(new java.awt.Rectangle(300, 200, 530, 330));
        frmBuscarTratamiento.setModal(true);
        frmBuscarTratamiento.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                frmBuscarTratamientoWindowActivated(evt);
            }
        });

        jPanel7.setBackground(java.awt.SystemColor.activeCaption);
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Lista de Tratamientos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jPanel8.setBackground(java.awt.SystemColor.activeCaption);
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Filtrar Por:"));

        txtValorBuscarT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtValorBuscarT.setForeground(new java.awt.Color(0, 0, 255));
        txtValorBuscarT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarTKeyTyped(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setText("Nombre del Tratamiento:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorBuscarT, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValorBuscarT, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel25))
                .addContainerGap())
        );

        tablaTratamientos.setBackground(new java.awt.Color(255, 255, 204));
        tablaTratamientos.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        tablaTratamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaTratamientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTratamientosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaTratamientos);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout frmBuscarTratamientoLayout = new javax.swing.GroupLayout(frmBuscarTratamiento.getContentPane());
        frmBuscarTratamiento.getContentPane().setLayout(frmBuscarTratamientoLayout);
        frmBuscarTratamientoLayout.setHorizontalGroup(
            frmBuscarTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        frmBuscarTratamientoLayout.setVerticalGroup(
            frmBuscarTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmBuscarTratamientoLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        frmBuscarEspecialista.setTitle("Especialistas");
        frmBuscarEspecialista.setBounds(new java.awt.Rectangle(300, 200, 530, 330));
        frmBuscarEspecialista.setModal(true);

        jPanel9.setBackground(java.awt.SystemColor.activeCaption);
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Lista de Especialistas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jPanel10.setBackground(java.awt.SystemColor.activeCaption);
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Filtrar Por:"));

        txtValorBuscarE.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtValorBuscarE.setForeground(new java.awt.Color(0, 0, 255));
        txtValorBuscarE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarEKeyTyped(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel26.setText("Nombre del Especialista:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorBuscarE, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValorBuscarE, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel26))
                .addContainerGap())
        );

        tablaEspecialista.setBackground(new java.awt.Color(255, 255, 204));
        tablaEspecialista.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        tablaEspecialista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEspecialista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEspecialistaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaEspecialista);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout frmBuscarEspecialistaLayout = new javax.swing.GroupLayout(frmBuscarEspecialista.getContentPane());
        frmBuscarEspecialista.getContentPane().setLayout(frmBuscarEspecialistaLayout);
        frmBuscarEspecialistaLayout.setHorizontalGroup(
            frmBuscarEspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        frmBuscarEspecialistaLayout.setVerticalGroup(
            frmBuscarEspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmBuscarEspecialistaLayout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        frmTipoConsulta.setTitle("Tipo de Consulta");
        frmTipoConsulta.setBounds(new java.awt.Rectangle(300, 300, 254, 170));
        frmTipoConsulta.setModal(true);
        frmTipoConsulta.setResizable(false);

        jPanel11.setBackground(java.awt.SystemColor.activeCaption);
        jPanel11.setForeground(new java.awt.Color(255, 0, 0));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Seleccione el Tipo de Consulta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jPanel12.setBackground(java.awt.SystemColor.activeCaption);
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAceptarTipoCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/acept-32.png"))); // NOI18N
        btnAceptarTipoCita.setText("ACEPTAR");
        btnAceptarTipoCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarTipoCitaActionPerformed(evt);
            }
        });
        jPanel12.add(btnAceptarTipoCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 53, 190, 45));

        grupoTipoConsulta.add(optTipo2);
        optTipo2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        optTipo2.setText("Consulta Sin Cita Previa");
        optTipo2.setToolTipText("Cuando no hay cita reservada");
        optTipo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optTipo2ActionPerformed(evt);
            }
        });
        jPanel12.add(optTipo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 27, 190, -1));

        grupoTipoConsulta.add(optTipo1);
        optTipo1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        optTipo1.setText("Consulta Con Cita Previa ");
        optTipo1.setToolTipText("Cuando existe cita reservada");
        optTipo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optTipo1ActionPerformed(evt);
            }
        });
        jPanel12.add(optTipo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 7, 190, -1));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout frmTipoConsultaLayout = new javax.swing.GroupLayout(frmTipoConsulta.getContentPane());
        frmTipoConsulta.getContentPane().setLayout(frmTipoConsultaLayout);
        frmTipoConsultaLayout.setHorizontalGroup(
            frmTipoConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        frmTipoConsultaLayout.setVerticalGroup(
            frmTipoConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        frmMostrarCitas.setTitle("Citas Programadas");
        frmMostrarCitas.setBounds(new java.awt.Rectangle(300, 200, 530, 330));
        frmMostrarCitas.setModal(true);
        frmMostrarCitas.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                frmMostrarCitasWindowActivated(evt);
            }
        });

        jPanel13.setBackground(java.awt.SystemColor.activeCaption);
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Citas Programadas Para Este Dia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jPanel14.setBackground(java.awt.SystemColor.activeCaption);
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 51));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("CITAS PROGRAMADAS PARA ESTE DIA");
        jPanel14.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 550, 30));

        tablaCitas.setBackground(new java.awt.Color(255, 255, 204));
        tablaCitas.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        tablaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCitasMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tablaCitas);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout frmMostrarCitasLayout = new javax.swing.GroupLayout(frmMostrarCitas.getContentPane());
        frmMostrarCitas.getContentPane().setLayout(frmMostrarCitasLayout);
        frmMostrarCitasLayout.setHorizontalGroup(
            frmMostrarCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        frmMostrarCitasLayout.setVerticalGroup(
            frmMostrarCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmMostrarCitasLayout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        frmMostrarPacientes.setTitle("Lista Pacientes");
        frmMostrarPacientes.setBounds(new java.awt.Rectangle(300, 200, 530, 330));
        frmMostrarPacientes.setMinimumSize(new java.awt.Dimension(700, 350));
        frmMostrarPacientes.setModal(true);
        frmMostrarPacientes.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                frmMostrarPacientesWindowActivated(evt);
            }
        });
        frmMostrarPacientes.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel15.setBackground(java.awt.SystemColor.activeCaption);
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Seleccione o busque un paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel15.setPreferredSize(new java.awt.Dimension(640, 305));

        jPanel16.setBackground(java.awt.SystemColor.activeCaption);
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Filtrar Por:"));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtValorBuscarPaciente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtValorBuscarPaciente.setForeground(new java.awt.Color(0, 0, 255));
        txtValorBuscarPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarPacienteKeyTyped(evt);
            }
        });
        jPanel16.add(txtValorBuscarPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 370, 35));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel27.setText("Nombre del Paciente:");
        jPanel16.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 170, 30));

        tablaPacientes.setBackground(new java.awt.Color(255, 255, 204));
        tablaPacientes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        tablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPacientesMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tablaPacientes);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        frmMostrarPacientes.getContentPane().add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 340));
        jPanel15.getAccessibleContext().setAccessibleName("Citas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(jTable1);

        frmBuscarMedicamentos.setTitle("Medicamentos");
        frmBuscarMedicamentos.setBounds(new java.awt.Rectangle(300, 200, 530, 330));
        frmBuscarMedicamentos.setModal(true);

        jPanel22.setBackground(java.awt.SystemColor.activeCaption);
        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Lista de Medicamentos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jPanel23.setBackground(java.awt.SystemColor.activeCaption);
        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Filtrar Por:"));
        jPanel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        txtValorBuscarM.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtValorBuscarM.setForeground(new java.awt.Color(0, 0, 255));
        txtValorBuscarM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarMKeyTyped(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setText("Nombre del Medicamento:");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorBuscarM, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValorBuscarM, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addContainerGap())
        );

        tablaMedicamentos.setBackground(new java.awt.Color(255, 255, 204));
        tablaMedicamentos.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        tablaMedicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaMedicamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMedicamentosMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tablaMedicamentos);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel23.getAccessibleContext().setAccessibleName("Filtrar Por");

        javax.swing.GroupLayout frmBuscarMedicamentosLayout = new javax.swing.GroupLayout(frmBuscarMedicamentos.getContentPane());
        frmBuscarMedicamentos.getContentPane().setLayout(frmBuscarMedicamentosLayout);
        frmBuscarMedicamentosLayout.setHorizontalGroup(
            frmBuscarMedicamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        frmBuscarMedicamentosLayout.setVerticalGroup(
            frmBuscarMedicamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnGenerarReceta1.setText("Crear Receta Medica");
        btnGenerarReceta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarReceta1ActionPerformed(evt);
            }
        });

        setBackground(java.awt.SystemColor.control);
        setClosable(true);
        setIconifiable(true);
        setTitle("Consultas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jXTaskPaneContainer1.setBackground(java.awt.SystemColor.activeCaption);
        jXTaskPaneContainer1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));
        jXTaskPaneContainer1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXTaskPane1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Tratamiento.png"))); // NOI18N
        jXTaskPane1.setTitle("OPCIONES");
        jXTaskPane1.setPreferredSize(new java.awt.Dimension(152, 140));

        lblNuevo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_AddDataBase.png"))); // NOI18N
        lblNuevo.setText("Nueva Consulta");
        lblNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNuevoMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblNuevo);

        lblCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_refresh.png"))); // NOI18N
        lblCancelar.setText("Cancelar Consulta");
        lblCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblCancelar);

        lblGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_save.png"))); // NOI18N
        lblGuardar.setText("Guardar Consulta");
        lblGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGuardarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblGuardar);

        lblCerrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_exit.png"))); // NOI18N
        lblCerrar.setText("Cerrar Ventana");
        lblCerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCerrarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblCerrar);

        jXTaskPaneContainer1.add(jXTaskPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 210, -1));

        jCalendar1.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jXTaskPaneContainer1.add(jCalendar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 152, 210, 140));

        jLabel19.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("CONSULTA Nº:");
        jXTaskPaneContainer1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 307, 200, -1));

        lblNumeroConsulta.setFont(new java.awt.Font("Cambria", 1, 28)); // NOI18N
        lblNumeroConsulta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumeroConsulta.setForeground(new java.awt.Color(255, 0, 0));
        jXTaskPaneContainer1.add(lblNumeroConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 350, 188, -1));

        panelPestanas.setBackground(java.awt.SystemColor.activeCaption);
        panelPestanas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelPestanas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel19.setBackground(java.awt.SystemColor.activeCaption);
        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Datos Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel19.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Id Paciente:");
        jPanel19.add(jLabel6);
        jLabel6.setBounds(20, 30, 110, 25);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Nombre:");
        jPanel19.add(jLabel5);
        jLabel5.setBounds(20, 90, 110, 25);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Dirección:");
        jPanel19.add(jLabel7);
        jLabel7.setBounds(20, 120, 110, 30);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("País:");
        jPanel19.add(jLabel11);
        jLabel11.setBounds(20, 192, 110, 30);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Telefono:");
        jPanel19.add(jLabel10);
        jLabel10.setBounds(20, 256, 110, 30);

        txtTelefono.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel19.add(txtTelefono);
        txtTelefono.setBounds(140, 256, 170, 30);

        txtPais.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel19.add(txtPais);
        txtPais.setBounds(140, 192, 170, 30);

        txtDireccion.setColumns(15);
        txtDireccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDireccion.setLineWrap(true);
        txtDireccion.setRows(3);
        txtDireccion.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtDireccion);

        jPanel19.add(jScrollPane1);
        jScrollPane1.setBounds(140, 130, 410, 60);

        txtNombrePacientes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel19.add(txtNombrePacientes);
        txtNombrePacientes.setBounds(140, 94, 410, 30);

        txtIdPaciente.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtIdPaciente.setForeground(new java.awt.Color(255, 0, 51));
        jPanel19.add(txtIdPaciente);
        txtIdPaciente.setBounds(140, 30, 170, 30);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Nº Doc. Identidad:");
        jPanel19.add(jLabel9);
        jLabel9.setBounds(20, 60, 120, 25);

        txtDui.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel19.add(txtDui);
        txtDui.setBounds(140, 62, 170, 30);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Ciudad:");
        jPanel19.add(jLabel12);
        jLabel12.setBounds(20, 224, 110, 30);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Celular:");
        jPanel19.add(jLabel13);
        jLabel13.setBounds(320, 256, 45, 30);

        txtCiudad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel19.add(txtCiudad);
        txtCiudad.setBounds(140, 224, 170, 30);

        txtCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularActionPerformed(evt);
            }
        });
        jPanel19.add(txtCelular);
        txtCelular.setBounds(370, 256, 180, 30);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Edad:");
        jPanel19.add(jLabel8);
        jLabel8.setBounds(20, 288, 110, 30);

        txtEdad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel19.add(txtEdad);
        txtEdad.setBounds(140, 288, 170, 30);

        jPanel1.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 570, 370));

        panelPestanas.addTab("Datos del Paciente", jPanel1);

        jPanel2.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(java.awt.SystemColor.activeCaption);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Servicio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel3.setLayout(null);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Id Servicio:");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(70, 10, 130, 30);

        txtIdServicio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtIdServicio.setForeground(new java.awt.Color(255, 0, 0));
        jPanel3.add(txtIdServicio);
        txtIdServicio.setBounds(70, 40, 105, 30);

        btnBuscarServicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_search.png"))); // NOI18N
        btnBuscarServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBuscarServicioMouseReleased(evt);
            }
        });
        btnBuscarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarServicioActionPerformed(evt);
            }
        });
        jPanel3.add(btnBuscarServicio);
        btnBuscarServicio.setBounds(180, 40, 25, 30);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Nombre del Servicio:");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(70, 70, 130, 30);

        txtNombreServicio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel3.add(txtNombreServicio);
        txtNombreServicio.setBounds(70, 100, 450, 30);

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 580, 140));

        jPanel17.setBackground(java.awt.SystemColor.activeCaption);
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Tratamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel17.setLayout(null);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Id Tratamiento:");
        jPanel17.add(jLabel16);
        jLabel16.setBounds(70, 20, 130, 30);

        txtIdTratamiento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtIdTratamiento.setForeground(new java.awt.Color(255, 0, 0));
        jPanel17.add(txtIdTratamiento);
        txtIdTratamiento.setBounds(70, 50, 105, 30);

        btnBuscarTratamiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_search.png"))); // NOI18N
        btnBuscarTratamiento.setEnabled(false);
        btnBuscarTratamiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBuscarTratamientoMouseReleased(evt);
            }
        });
        btnBuscarTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTratamientoActionPerformed(evt);
            }
        });
        jPanel17.add(btnBuscarTratamiento);
        btnBuscarTratamiento.setBounds(180, 50, 25, 30);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Nombre del Tratamiento:");
        jPanel17.add(jLabel17);
        jLabel17.setBounds(70, 80, 153, 30);

        txtNombreTratamiento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel17.add(txtNombreTratamiento);
        txtNombreTratamiento.setBounds(70, 110, 450, 30);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Precio $:");
        jPanel17.add(jLabel20);
        jLabel20.setBounds(70, 140, 52, 30);

        txtPrecioTratamiento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPrecioTratamiento.setForeground(new java.awt.Color(255, 0, 0));
        txtPrecioTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioTratamientoActionPerformed(evt);
            }
        });
        jPanel17.add(txtPrecioTratamiento);
        txtPrecioTratamiento.setBounds(70, 170, 105, 30);

        jPanel2.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 580, 220));

        jPanel2.add(jcIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, -1, -1));

        jPanel2.add(jcHorariosVencidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 116, -1));
        jPanel2.add(txtTipoConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, 30, -1));
        jPanel2.add(txtNumeroCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, 28, -1));
        jPanel2.add(txtHoraSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 29, -1));
        jPanel2.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 27, -1));

        panelPestanas.addTab("Servicio y Tratamiento", jPanel2);

        jPanel4.setBackground(java.awt.SystemColor.activeCaption);
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel18.setBackground(java.awt.SystemColor.activeCaption);
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Especialista y Diagnostico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Id Especialista:");

        btnBuscarEspecialista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_search.png"))); // NOI18N
        btnBuscarEspecialista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBuscarEspecialistaMouseReleased(evt);
            }
        });
        btnBuscarEspecialista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEspecialistaActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Nombre del Especialista:");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setText("Diagnostico:");

        txtDiagnostico.setColumns(20);
        txtDiagnostico.setLineWrap(true);
        txtDiagnostico.setRows(5);
        txtDiagnostico.setWrapStyleWord(true);
        txtDiagnostico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiagnosticoKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtDiagnostico);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel18Layout.createSequentialGroup()
                    .addGap(0, 70, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel18Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel18Layout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addGap(63, 63, 63)
                                    .addComponent(jLabel21))
                                .addComponent(jLabel22)))
                        .addGroup(jPanel18Layout.createSequentialGroup()
                            .addComponent(txtIdEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1)
                            .addComponent(btnBuscarEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(txtNombreEspecialista))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 42, Short.MAX_VALUE)))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel18Layout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel18)
                        .addComponent(jLabel21))
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnBuscarEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel18Layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtIdEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombreEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel22)
                    .addGap(1, 1, 1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 580, 140));

        jPanel20.setBackground(java.awt.SystemColor.activeCaption);
        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Medicamento:");

        tablaRecetaMedica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cantidad", "Codigo", "Nombre", "Indicacion", "Precio U.", "Total"
            }
        ));
        jScrollPane9.setViewportView(tablaRecetaMedica);

        btnAgregarMedicamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_search.png"))); // NOI18N
        btnAgregarMedicamento.setEnabled(false);
        btnAgregarMedicamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAgregarMedicamentoMouseReleased(evt);
            }
        });
        btnAgregarMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMedicamentoActionPerformed(evt);
            }
        });

        txtCodigoMedicamento.setEnabled(false);
        txtCodigoMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoMedicamentoActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 0, 0));
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("TOTAL $:");

        btnModificarCantidad.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnModificarCantidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_numeral.png"))); // NOI18N
        btnModificarCantidad.setToolTipText("Modificar Cantidad");
        btnModificarCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCantidadActionPerformed(evt);
            }
        });

        btnModificarPrecio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_dollar.png"))); // NOI18N
        btnModificarPrecio.setToolTipText("Modificar Precio");
        btnModificarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPrecioActionPerformed(evt);
            }
        });

        btnQuitarRenglon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_delete.png"))); // NOI18N
        btnQuitarRenglon.setToolTipText("Quitar Fila");
        btnQuitarRenglon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarRenglonActionPerformed(evt);
            }
        });

        jLabel3.setText("SUB TOTAL:");

        txtSubTotal.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Receta N°:");

        lblNumeroReceta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNumeroReceta.setForeground(new java.awt.Color(255, 0, 0));

        btnGenerarReceta.setText("Click Para Crear Receta Medica");
        btnGenerarReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarRecetaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btnModificarCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnModificarPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnQuitarRenglon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel20Layout.createSequentialGroup()
                                        .addGap(188, 188, 188)
                                        .addComponent(btnGenerarReceta))
                                    .addGroup(jPanel20Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCodigoMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAgregarMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4)))
                                .addGap(18, 18, 18)
                                .addComponent(lblNumeroReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane9))))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnGenerarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtCodigoMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAgregarMedicamento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(lblNumeroReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificarCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificarPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnQuitarRenglon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(92, 92, 92))
        );

        panelReceta.addTab("Receta Medica  (Sólo si es necesario)", jPanel20);

        jPanel4.add(panelReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 580, 250));

        panelPestanas.addTab("Diagnostico", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelPestanas, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelPestanas)
                    .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarServicioActionPerformed
        // TODO add your handling code here:
        frmBuscarServicio.setVisible(true);
    }//GEN-LAST:event_btnBuscarServicioActionPerformed

    private void btnBuscarTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTratamientoActionPerformed
        // TODO add your handling code here:
        frmBuscarTratamiento.setVisible(true);
    }//GEN-LAST:event_btnBuscarTratamientoActionPerformed

    private void btnBuscarEspecialistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEspecialistaActionPerformed
        // TODO add your handling code here:
        frmBuscarEspecialista.setVisible(true);
        activaControles (false, false, false, false, false, false,false, false, false, false, false, false,false, false, false, false, true);
    }//GEN-LAST:event_btnBuscarEspecialistaActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        obtenerFechaActual();
        citasVencidas();
        updateTablaEspecialista();
        //updateTablaTratamientos();
        updateTablaServicios();
        updateTablaCitas();
        updateTablaPacientes();
        updateTablaMedicamentos();
        comboMedicamento();
        setAnchoColummnas();
        activaOpciones(true,false,false);
        ocultaOpciones(false,false,false,false,false, false);
        activaControles (false, false, false, false, false, false,false, false, false, false, false, false,false, false, false, false, false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void lblNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNuevoMouseClicked
        // TODO add your handling code here:
        nuevaConsulta();//metodo nueva consulta
        frmTipoConsulta.setVisible(true);//mostraramos el formulario tipo consulta
        activaOpciones(false,true,true);
        activaControles (false, false, false, false, false, false,false, false, false, false, false, false,false, false, false, false, true);
    }//GEN-LAST:event_lblNuevoMouseClicked

    private void btnAceptarTipoCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarTipoCitaActionPerformed
        // TODO add your handling code here:
                
        if(optTipo1.isSelected())
        {
            this.frmTipoConsulta.dispose();
            frmMostrarCitas.setVisible(true);
            frmMostrarCitas.setSize(700,400);
            txtTipoConsulta.setText("0");//consulta programada
        }else if(optTipo2.isSelected())
        {
            this.frmTipoConsulta.dispose();
            frmMostrarPacientes.setVisible(true);
            frmMostrarPacientes.setSize(700,400);
            txtTipoConsulta.setText("1");//consulta no programada
        }else
        {
            JOptionPane.showMessageDialog(null,"Seleccione una opcion","SICO",1);
        }
    }//GEN-LAST:event_btnAceptarTipoCitaActionPerformed

    private void tablaCitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCitasMouseClicked
         // TODO add your handling code here:
        fila = tablaCitas.rowAtPoint(evt.getPoint());//se obtiene la posicion de la fila        
        String ic, ip, dui = null, np = null, dip = null, pa = null, ci = null, tp = null, cp = null, ep = null;
        
        if (fila>-1)//Obtenemos el id de la cita y el id del paciente
        {
            ic = (String) tablaCitas.getValueAt(tablaCitas.getSelectedRow(), 0);//numero de cita
            ip =(String) tablaCitas.getValueAt(tablaCitas.getSelectedRow(), 1);//id del paciente
                        
            //Consulta para obtener los datos del paciente
            con = new bdConexion();
            try
                {            
                    PreparedStatement pstm=(PreparedStatement)
                    con.getConnection().prepareStatement("SELECT * FROM paciente WHERE IdPaciente='"+ip+"'");
                    ResultSet resul=pstm.executeQuery();          

                    //BUCLE PARA OBTENER LOS DATOS DEL PACIENTE
                    while (resul.next())
                    {
                        dui = resul.getString("dui");
                        np = resul.getString("nombres")+ " "+ resul.getString("apellidos");
                        dip = resul.getString("direccion");
                        pa= resul.getString("pais");
                        ci = resul.getString("ciudad");
                        tp = resul.getString("telefono1");
                        cp = resul.getString("telefono2");
                        ep = resul.getString("edad");
                    }
                    resul.close();
                }
                catch(SQLException e)
                {
                    System.out.println(e);
                }
            //para finalizar colocamos los datos en los campos correspondiente del formulario            
            
            txtIdPaciente.setText(ip);
            txtDui.setText(dui);
            txtNombrePacientes.setText(np);           
            txtDireccion.setText(dip);
            txtPais.setText(pa);
            txtCiudad.setText(ci);
            txtTelefono.setText(tp);
            txtCelular.setText(cp);        
            txtEdad.setText(ep);
            
            txtNumeroCita.setText(ic);// no se muestra en el formulario, pero es necesario para usos posteriores.
            
            this.frmMostrarCitas.dispose();
        }//fin del if          
        
    }//GEN-LAST:event_tablaCitasMouseClicked

    private void tablaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPacientesMouseClicked
        // TODO add your handling code here:
        fila = tablaPacientes.rowAtPoint(evt.getPoint());//se obtiene la posicion de la fila        
        String ip, dui = null, np = null, dip = null, pa = null, ci = null, tp = null, cp = null, ep = null;
        
        if (fila>-1)//Obtenemos el id del paciente
        {            
            ip =(String) tablaPacientes.getValueAt(tablaPacientes.getSelectedRow(), 0);//id del paciente
                        
            //Consulta para obtener los datos del paciente
            con = new bdConexion();
            try
                {            
                    PreparedStatement pstm=(PreparedStatement)
                    con.getConnection().prepareStatement("SELECT * FROM paciente WHERE IdPaciente='"+ip+"'");
                    ResultSet resul=pstm.executeQuery();          

                    //BUCLE PARA OBTENER LOS DATOS DEL PACIENTE
                    while (resul.next())
                    {
                        dui = resul.getString("dui");
                        np = resul.getString("nombres")+ " "+ resul.getString("apellidos");
                        dip = resul.getString("direccion");
                        pa= resul.getString("pais");
                        ci = resul.getString("ciudad");
                        tp = resul.getString("telefono1");
                        cp = resul.getString("telefono2");
                        ep = resul.getString("edad");
                    }
                    resul.close();
                }
                catch(SQLException e)
                {
                    System.out.println(e);
                }
            //para finalizar colocamos los datos en los campos correspondiente del formulario            
            
            txtIdPaciente.setText(ip);
            txtDui.setText(dui);
            txtNombrePacientes.setText(np);           
            txtDireccion.setText(dip);
            txtPais.setText(pa);
            txtCiudad.setText(ci);
            txtTelefono.setText(tp);
            txtCelular.setText(cp);        
            txtEdad.setText(ep);
            
            this.frmMostrarPacientes.dispose();
            
//            txtNumeroCita.setText(ic);// no se muestra en el formulario, pero es necesario para usos posteriores.
        }//fin del if  
    }//GEN-LAST:event_tablaPacientesMouseClicked

    private void tablaServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaServiciosMouseClicked
        // TODO add your handling code here:
        fila = tablaServicios.rowAtPoint(evt.getPoint());//se obtiene la posicion de la fila        
        String is, ns;
        
        if (fila>-1)//Obtenemos el id del paciente
        {            
            is =(String) tablaServicios.getValueAt(tablaServicios.getSelectedRow(), 0);//id del servicio
            ns =(String) tablaServicios.getValueAt(tablaServicios.getSelectedRow(), 1);//nombre del servicio
                        
            
            //para finalizar colocamos los datos en los campos correspondiente del formulario            
            
            txtIdServicio.setText(is);
            txtNombreServicio.setText(ns);
            
            this.frmBuscarServicio.dispose();
            btnBuscarTratamiento.setEnabled(true);
        }//fin del if
    }//GEN-LAST:event_tablaServiciosMouseClicked

    private void tablaTratamientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTratamientosMouseClicked
        // TODO add your handling code here:
        fila = tablaTratamientos.rowAtPoint(evt.getPoint());//se obtiene la posicion de la fila        
        String it, nt, tt;
        
        if (fila>-1)//Obtenemos el id del paciente
        {            
            it =(String) tablaTratamientos.getValueAt(tablaTratamientos.getSelectedRow(), 0);//id del tratamiento
            nt =(String) tablaTratamientos.getValueAt(tablaTratamientos.getSelectedRow(), 1);//nombre del tratamiento
            tt =(String) tablaTratamientos.getValueAt(tablaTratamientos.getSelectedRow(), 3);//valor del tratamiento
                        
            
            //para finalizar colocamos los datos en los campos correspondiente del formulario            
            
            txtIdTratamiento.setText(it);
            txtNombreTratamiento.setText(nt);
            txtPrecioTratamiento.setText(tt);
            
            this.frmBuscarTratamiento.dispose();
        }//fin del if
    }//GEN-LAST:event_tablaTratamientosMouseClicked

    private void tablaEspecialistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEspecialistaMouseClicked
        // TODO add your handling code here:
        fila = tablaEspecialista.rowAtPoint(evt.getPoint());//se obtiene la posicion de la fila        
        String ie, ne;
        
        if (fila>-1)//Obtenemos el id del paciente
        {            
            ie =(String) tablaEspecialista.getValueAt(tablaEspecialista.getSelectedRow(), 0);//id del Especialista
            ne =(String) tablaEspecialista.getValueAt(tablaEspecialista.getSelectedRow(), 1);//nombre del Especia...
                        
            
            //para finalizar colocamos los datos en los campos correspondiente del formulario            
            
            txtIdEspecialista.setText(ie);
            txtNombreEspecialista.setText(ne);
            
            this.frmBuscarEspecialista.dispose();
        }//fin del if
    }//GEN-LAST:event_tablaEspecialistaMouseClicked

    private void lblGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGuardarMouseClicked
        // TODO add your handling code here:
        validarCampos();//       
    }//GEN-LAST:event_lblGuardarMouseClicked

    private void lblCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarMouseClicked
        // TODO add your handling code here:
        activaOpciones(true,false,false);
        activaControles (false, false, false, false, false, false,false, false, false, false, false, false,false, false, false, false, false);
        limpiarControles();        
    }//GEN-LAST:event_lblCancelarMouseClicked

    private void lblCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lblCerrarMouseClicked

    private void btnAgregarMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMedicamentoActionPerformed
        // TODO add your handling code here:
        frmBuscarMedicamentos.setVisible(true);
    }//GEN-LAST:event_btnAgregarMedicamentoActionPerformed

    private void tablaMedicamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMedicamentosMouseClicked
        // TODO add your handling code here:
        agregarFila();//metodo para agregar en la tablaReceta los medicamentos seleccionados
    }//GEN-LAST:event_tablaMedicamentosMouseClicked

    private void btnModificarCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCantidadActionPerformed
        // Llamamos al metodo modificar cantidad
        modificarCantidad();
    }//GEN-LAST:event_btnModificarCantidadActionPerformed

    private void btnModificarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPrecioActionPerformed
        // TODO add your handling code here:
        modificarPrecio();
    }//GEN-LAST:event_btnModificarPrecioActionPerformed

    private void btnQuitarRenglonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarRenglonActionPerformed
        // TODO add your handling code here:
        eliminarFila();
    }//GEN-LAST:event_btnQuitarRenglonActionPerformed

    private void btnGenerarRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarRecetaActionPerformed
         // TODO add your handling code here:
        nuevaRecetaMedica();// metodo para generar numero automatico de receta
    }//GEN-LAST:event_btnGenerarRecetaActionPerformed

    private void txtDiagnosticoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiagnosticoKeyReleased
         // TODO add your handling code here:
        String d = txtDiagnostico.getText().toUpperCase();
        txtDiagnostico.setText(d);
    }//GEN-LAST:event_txtDiagnosticoKeyReleased

    private void btnGenerarReceta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarReceta1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerarReceta1ActionPerformed

    private void txtCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularActionPerformed

    private void txtPrecioTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioTratamientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioTratamientoActionPerformed

    private void txtCodigoMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoMedicamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoMedicamentoActionPerformed

    private void btnAgregarMedicamentoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMedicamentoMouseReleased
        // TODO add your handling code here:
        btnAgregarMedicamento.setToolTipText("Buscar Medicamento");
    }//GEN-LAST:event_btnAgregarMedicamentoMouseReleased

    private void btnBuscarEspecialistaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarEspecialistaMouseReleased
        // TODO add your handling code here:
        btnBuscarEspecialista.setToolTipText("Buscar Especialista");
    }//GEN-LAST:event_btnBuscarEspecialistaMouseReleased

    private void btnBuscarServicioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarServicioMouseReleased
        // TODO add your handling code here:
        btnBuscarServicio.setToolTipText("Buscar el Servicio a brindar...");
    }//GEN-LAST:event_btnBuscarServicioMouseReleased

    private void btnBuscarTratamientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarTratamientoMouseReleased
        // TODO add your handling code here:
        btnBuscarTratamiento.setToolTipText("Buscar Tratamiento a Aplicar...");
    }//GEN-LAST:event_btnBuscarTratamientoMouseReleased

    private void txtValorBuscarMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarMKeyTyped
        
        String vBuscar = "nombreMedicamento";
        String vValor = txtValorBuscarM.getText();
        try {
            //p.buscarPaciente(vBuscar, vValor);           
            tablaMedicamentos.setModel(med.buscarMedicamento(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtValorBuscarMKeyTyped

    private void txtValorBuscarSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarSKeyTyped
        String vBuscar = "nombreServicio";
        String vValor = txtValorBuscarS.getText();
        try {
            //p.buscarPaciente(vBuscar, vValor);           
            tablaServicios.setModel(ser.buscarServicio(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtValorBuscarSKeyTyped

    private void txtValorBuscarTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarTKeyTyped
        String vBuscar = "nombreTratamiento";
        String vValor = txtValorBuscarT.getText();
        try {
            //p.buscarPaciente(vBuscar, vValor);           
            tablaTratamientos.setModel(tra.buscarTratamiento(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtValorBuscarTKeyTyped

    private void txtValorBuscarEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarEKeyTyped
        String vBuscar = "nombres";
        String vValor = txtValorBuscarE.getText();
        try {
            //p.buscarPaciente(vBuscar, vValor);           
            tablaEspecialista.setModel(esp.buscarEspecialista2(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtValorBuscarEKeyTyped

    private void frmMostrarCitasWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmMostrarCitasWindowActivated
        frmMostrarCitas.setSize(650,350);
        frmMostrarCitas.setResizable(true);
    }//GEN-LAST:event_frmMostrarCitasWindowActivated

    private void frmMostrarPacientesWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmMostrarPacientesWindowActivated
        frmMostrarPacientes.setSize(650,350);
        frmMostrarPacientes.setResizable(true);
    }//GEN-LAST:event_frmMostrarPacientesWindowActivated

    private void txtValorBuscarPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarPacienteKeyTyped
        String vBuscar="nombres";
        String vValor = txtValorBuscarPaciente.getText();
        try {
            //p.buscarPaciente(vBuscar, vValor);           
            tablaPacientes.setModel(pa.buscarPaciente2(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_txtValorBuscarPacienteKeyTyped

    private void optTipo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optTipo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optTipo1ActionPerformed

    private void optTipo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optTipo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optTipo2ActionPerformed

    private void frmBuscarTratamientoWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmBuscarTratamientoWindowActivated
        //Actualizamos la tabla con los tratamientos segun el servicio seleccionado
        updateTablaTratamientos();
    }//GEN-LAST:event_frmBuscarTratamientoWindowActivated

    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA CITAS
    private void updateTablaCitas(){
         String[] columNames = {"N° Cita", "Cod. Paciente", "Nombre Paciente", "Fecha Cita", "Hora Cita"};
         String fechaActual=txtFecha.getText();           
           
           //usamos la funcion    
          dtCitas = consul.getDatosCitas(fechaActual);

        // se colocan los datos en la tabla     
        DefaultTableModel datos= new DefaultTableModel(dtCitas,columNames);
        tablaCitas.setModel(datos);
        TableColumnModel columnModel = tablaCitas.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(30);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(50);
        columnModel.getColumn(3).setPreferredWidth(50);
    }
    
    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA PACIENTES
    private void updateTablaPacientes(){
           String[] columNames = {"Id Paciente", "Nombre Paciente"};
         //usamos la funcion    
          dtPacientes=consul.getDatosPacientes();

        // se colocan los datos en la tabla
        DefaultTableModel datos= new DefaultTableModel(dtPacientes,columNames);
        tablaPacientes.setModel(datos);
        TableColumnModel columnModel = tablaPacientes.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(150);        
    }
    
    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA SERVICIOS
    private void updateTablaServicios(){
           String[] columNames = {"Id Servicio","Nombre", "Descripcion"};
         //usamos la funcion    
          dtServicios = consul.getDatosServicios();

        // se colocan los datos en la tabla
        DefaultTableModel datos= new DefaultTableModel(dtServicios,columNames);
        tablaServicios.setModel(datos);
        updateTablaTratamientos();
    }
    
    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA TRATAMIENTOS
    private void updateTablaTratamientos(){
        String codServicio = txtIdServicio.getText();
        String[] columNames = {"Id Tratamiento","Nombre", "Descripcion", "Precio Tratamiento"};
         //usamos la funcion    
          dtTratamientos = consul.getDatosTratamientos(codServicio);

        // se colocan los datos en la tabla
        DefaultTableModel datos= new DefaultTableModel(dtTratamientos,columNames);
        tablaTratamientos.setModel(datos);
    }
    
    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA ESPECIALISTA
    private void updateTablaEspecialista(){
           String[] columNames = {"Id Especialista","Nombre"};
         //usamos la funcion    
          dtEspecialista = consul.getDatosEspecialista();

        // se colocan los datos en la tabla
        DefaultTableModel datos= new DefaultTableModel(dtEspecialista,columNames);
        tablaEspecialista.setModel(datos);
    }
    
    //METODO PARA ACTUALIZAR LOS DATOS DE LA TABLA medicamentos 
    private void updateTablaMedicamentos(){
            String[] columNames = {"Codigo","Nombre","Descripción","Cantidad","Precio Unitario"};//variable tipo vector que almacena los titulos de las columnas de la tabla
             //usamos la funcion
            dtMedicamentos = consul.getDatosMedicamentos();

            // se colocan los datos en la tabla
            DefaultTableModel datos= new DefaultTableModel(dtMedicamentos,columNames);
            tablaMedicamentos.setModel(datos);
    }
    
    
    //METODO PARA OBTENER LA HORA Y LA FECHA ACTUAL
    private void obtenerFechaActual()
    {
         Calendar c = Calendar.getInstance();//creamos una instancia de la clase calendar de java
        //java.util.Date fecha = new Date();
        String dia = Integer.toString(c.get(Calendar.DATE));
        String mes = Integer.toString(c.get(Calendar.MONTH)+1);
        String annio = Integer.toString(c.get(Calendar.YEAR));
        
        String hora = Integer.toString(c.get(Calendar.HOUR_OF_DAY));
        String minuto = Integer.toString(c.get(Calendar.MINUTE));
        String segundo = Integer.toString(c.get(Calendar.SECOND));        
        String ampm = c.get(Calendar.AM_PM)==Calendar.AM?"a.m.":"p.m.";
        
        int d = Integer.parseInt(dia);
        int m = Integer.parseInt(mes);
        
        if (d < 10 && m < 10)
        {
            txtFecha.setText(annio +"-0"+ mes +"-0"+dia);      
            
        }else if(d>10 && m <10)
        {
            txtFecha.setText(annio +"-0"+ mes +"-"+dia);
            
        }else
        {
            txtFecha.setText(annio +"-"+ mes +"-"+dia);
            
        }
        
        int h = Integer.parseInt(hora);
        int mi = Integer.parseInt(minuto);
        
        
        if(h<10 && mi<10)
        {
            txtHoraSistema.setText("0"+hora+":0"+minuto+":"+segundo+" "+ampm);            
        }else if (h<10 && mi >10)
        {
            txtHoraSistema.setText("0"+hora+':'+minuto+":"+segundo+" "+ampm);            
        }else if(h>10 && mi<10)                
        {
            txtHoraSistema.setText(hora+":0"+minuto+":"+segundo+" "+ampm);            
        }else
        {
            txtHoraSistema.setText(hora+":"+minuto+":"+segundo+" "+ampm);            
        }
    }
    
    //METODO PARA GENERAR NUEVA CONSULTA
    public void nuevaConsulta()
    {
              
       //GENERAR NUMERO DE CITA AUTOMANTICO
       int registros;
       try
        {
            con = new bdConexion();
            java.sql.PreparedStatement pstm=(java.sql.PreparedStatement)
            con.getConnection().prepareStatement("SELECT count(1) as total FROM consultas");//cuenta el total de registros de la tabla consultas
            ResultSet res=pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();

            if (registros <=0)//significa que la tabla no tiene ningun registro
            {
                lblNumeroConsulta.setText("000001");
            }
            else
            {                                  
//                con = new bdConexion();
                java.sql.PreparedStatement pstm1=(java.sql.PreparedStatement)
                con.getConnection().prepareStatement("SELECT MAX(IdConsulta) as codigo FROM consultas");
                ResultSet res1=pstm1.executeQuery();


                res1.first();
                String v =res1.getString("codigo");                
                int cod=(Integer.parseInt(v)+1);               

                if ( cod<10)
                {
                    lblNumeroConsulta.setText("00000"+cod);
                }
                else if(cod<100)
                {
                    lblNumeroConsulta.setText("0000"+cod);
                }
                else if(cod<1000)
                {
                    lblNumeroConsulta.setText("000"+cod);
                }
                else if(cod<10000)
                {
                    lblNumeroConsulta.setText("00"+cod);
                }
                else if(cod<100000)
                {
                    lblNumeroConsulta.setText("0"+cod);
                }
                else
                {
                    lblNumeroConsulta.setText(v);
                }

            res1.close();
            }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }
    
    //METODO PARA VALIDAR LOS CAMPOS DE TEXTO CUANDO ES UN REGISTRO NUEVO
    public void validarCampos()
    {
        // VALIDACION DE LOS CAMPOS DE TEXTO
                             
            if (txtIdPaciente.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Faltan los datos del Paciente");
                frmTipoConsulta.setVisible(true);
                //frmTipoConsulta.show();
            }

            else if (txtIdServicio.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Seleccione el tipo de servicio a aplicar");
                frmBuscarServicio.setVisible(true);
                //frmBuscarServicio.show();

            }else if (txtIdTratamiento.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Elija el tratamiento a aplicar al paciente");
                frmBuscarTratamiento.setVisible(true);
                //frmBuscarTratamiento.show(); 
                
            }else if (txtIdEspecialista.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Elija los datos del Especialista");
                frmBuscarEspecialista.setVisible(true);            
                //frmBuscarEspecialista.show();            
            }else if (txtDiagnostico.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Falta el diagnostico para el paciente");
                txtDiagnostico.setFocusable(true);            
            }            
            else
            {
                //si todo esta bien guardamos la consulta
                guardarConsulta();//metodo guardar consulta
                guardarRecetaMedica();//metodo guardar la recetaMedica
                activaOpciones(true,false,false);
                activaControles (false, false, false, false, false, false,false, false, false, false, false, false,false, false, false, false, false);
                limpiarControles();
            }
        
    }
          
    
     //METODO GUARDAR CONSULTA
    public void guardarConsulta()
    {        
        int resp;
        resp=JOptionPane.showConfirmDialog(null,"¿Desea guardar el registro?","Pregunta",0);

        if (resp==0)
        {
            String cConsulta = lblNumeroConsulta.getText();            
            String cP= txtIdPaciente.getText();                     
            String cS=txtIdServicio.getText();
            String cT=txtIdTratamiento.getText();
            String cE=txtIdEspecialista.getText();
            String diag= txtDiagnostico.getText();
            String fC = txtFecha.getText();
            String hC = txtHoraSistema.getText();
            
            if (txtTipoConsulta.getText().equals("0"))//Es consulta programada "Hizo Cita"
            {
                String iCit=txtNumeroCita.getText();
                
                //envio de datos a los metodos correspondientes de las clases instanciadas
                consul.nuevaConsulta(cConsulta, cP, cS, cT, cE, diag, fC, hC); 
                consul.citaRealizada(iCit);
                System.out.println("Consulta: "+cConsulta+" Paciente: "+cP+" Fecha: "+fC);
                expPaciente.nuevoExpediente(cConsulta, cP, fC);

                activaOpciones(true,false,false);            
//                limpiarControles();
                updateTablaCitas();
            }else{
                //envio de datos a los metodos correspondientes de las clases instanciadas
                consul.nuevaConsulta(cConsulta, cP, cS, cT, cE, diag, fC, hC); 
                expPaciente.nuevoExpediente(cConsulta, cP, fC);
                
                activaOpciones(true,false,false);            
//                limpiarControles();
            }
        }
    }
    
    //METODO GUARDAR RECETA
    public void guardarRecetaMedica()
    {
        String cr, cp, f;
        double t; //total de la receta       
        
        //obtenemos los valores de los campos correspondientes en las variables definidas antes...
        
        cr=lblNumeroReceta.getText();
        cp=txtIdPaciente.getText();
        f=txtFecha.getText();               
        
        /*AHORA DEBEMOS COLOCAR LA INFORMACION TAMBIEN EN LA TABLA DETALLERECETA
         * para lo cual obtenemos los datos de la tabla recetamedicamentos del formulario consultas
         */

         //SI SON VARIOS registros los de la tabla entonces, es necesario hacer un bucle para recorrerlo y obtener los datos

        int totalFilas = tablaRecetaMedica.getRowCount();//obtenemos el numero de filas que ya existen en la tabla
        int x=0;
        int c=0;
        
        while(x <= totalFilas-1)
        {                    
            String cant= String.valueOf(tablaRecetaMedica.getValueAt(x, 0));        
            String codM =String.valueOf(tablaRecetaMedica.getValueAt(x, 1));
            String des =String.valueOf(tablaRecetaMedica.getValueAt(x, 3));
            String preUni =String.valueOf(tablaRecetaMedica.getValueAt(x, 4).toString().substring(2));
            String total=String.valueOf(tablaRecetaMedica.getValueAt(x, 5).toString().substring(2));                                        

            //***Enviamos los parametros codProducto y cantidad al metodo ajustarStock de la clase ventas//                  
            consul.ajustarStockMedicamentos(codM, cant);
            //*** importante esta parte para hacer el decuento de la mercaderia en el inventario.
            updateTablaMedicamentos();
            //enviamos estos datos al metodo nuevareceta de la clase consulta
            consul.nuevaReceta(cr, cp, f, codM, cant, des, preUni, total);

            x++;
        }          
                               
    } 
    
    
    //metodo para agregar productos a la factura
    private void agregarFila()
    {
        String cantidad = JOptionPane.showInputDialog("CANTIDAD :", 1);
        
        double cant= Double.parseDouble(cantidad);
        double total;
        double totalVenta;

        if (cant<=0)
        {
            JOptionPane.showMessageDialog(null, "Error la cantidad no puede ser cero o menor","SICO",0);
        }
        else 
        {            
            
            int filas;
            //primero obtenemos los datos que nos interesan de la tabla buscarProducto
            String codM =(String) tablaMedicamentos.getValueAt(tablaMedicamentos.getSelectedRow(), 0);
            String nomM =(String) tablaMedicamentos.getValueAt(tablaMedicamentos.getSelectedRow(), 1);            
            String canM =(String) tablaMedicamentos.getValueAt(tablaMedicamentos.getSelectedRow(), 3);
            String prec =String.valueOf(tablaMedicamentos.getValueAt(tablaMedicamentos.getSelectedRow(), 4));
            double sto = Double.parseDouble(canM);

            if (cant > sto)
            {
                JOptionPane.showMessageDialog(null, "La cantidad introducida es mayor que el stock actual '"+sto+"'","SICO",0);

            }else
            {
                this.frmBuscarMedicamentos.dispose();//luego de elegido un medicamento se cierra la ventana...
                updateTablaMedicamentos();

                //DecimalFormat df = new DecimalFormat("0.00"); 
                double precio=Double.valueOf(prec);
                total=(cant*precio);
                double t = total;
                double pUn=precio;
                
                System.out.println("Precio uni: "+pUn +" Total: "+total);
                
                String indicacion = JOptionPane.showInputDialog("ESCRIBA LA INDICACION MEDICA :", "Ej. Tomar 1 cada 5 horas");
                if (indicacion.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "ESCRIBA LA INDICACION MEDICA POR FAVOR","SICO",0);
                }
                else
                {                                
                    
                    // se crea un modelo para la tabla recetaMedic, el nombre de la variable de la tabla es: tablaRecetaMedica
                    DefaultTableModel modelo=(DefaultTableModel) tablaRecetaMedica.getModel();
                    int numFila = tablaRecetaMedica.getRowCount();//obtenemos el numero de filas que ya existen en la tablaFactura
                    filas=numFila;//le pasamos el valor a la variable filas  con el proposito de que cuando se agregue otro producto este no reemplaze al q ya existe.

                    //se agrega la fila en la tabla con un valor vacio
                    modelo.addRow(new Object[filas]);
                    //para agregar valores en la fila
                    tablaRecetaMedica.setValueAt(cant,filas , 0);
                    tablaRecetaMedica.setValueAt(codM,filas , 1);
                    tablaRecetaMedica.setValueAt(nomM, filas, 2);
                    tablaRecetaMedica.setValueAt(indicacion, filas, 3);
                    tablaRecetaMedica.setValueAt("$ "+pUn, filas, 4);
                    tablaRecetaMedica.setValueAt("$ "+t, filas, 5);

                    if (lblTotal.getText().equals(""))
                    {
                        //DecimalFormat tv = new DecimalFormat("0.00");
                        lblTotal.setText(String.valueOf(total));
                        txtSubTotal.setText(String.valueOf(total));
                        //lblTotal.setText(df.format(total));
                        //txtSubTotal.setText(df.format(total));
                        System.out.println("Valor Total Parcial: "+total);
                        activaBotones(true,true,true);

                    }else
                    {
                        //DecimalFormat tv = new DecimalFormat("0.00");
                        double a = Double.valueOf(String.valueOf(lblTotal.getText()));
                        System.out.println("Total Acumulado: "+a);
                        totalVenta=(total+a);
                        //DecimalFormat tv = new DecimalFormat("0.00");
                        txtSubTotal.setText(String.valueOf(totalVenta));
                        lblTotal.setText(String.valueOf(totalVenta));

                    } 
                }
            }                                                                       
        }                        
                                              
    }
    
    //metodo para modificar la cantidad
    public void modificarCantidad()
    {
        double tot;
        double stkm=0;
        //obtenemos el valor a pagar antes de modificar la cantidad, nos servira mas adelante y lo almacenamos en totalVenta.
        double totalVenta = Double.parseDouble(txtSubTotal.getText());
        
        
        int filas= tablaRecetaMedica.getSelectedRow();//obtenemos la fila seleccionada a modificar la cantidad
        if(filas<0)
        {
            JOptionPane.showMessageDialog(null, "Seleccione una fila de la tabla primero");
        }
        else//else a
        {
            String cant= String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 0));        
            String cm= String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 1));//obtenemos el codigo del producto
            String pre = String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 4).toString().substring(2));//utilizamos substring para quitar el signo de dolar, para poder realizar las operacciones matematicas correctamente
            String total=String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 5).toString().substring(2));

            double p = Double.parseDouble(pre);            
            double can = Double.parseDouble(cant);
            double t = Double.parseDouble(total);
            
            try
            {//para comprobar si la nueva cantidad digitada  no sobrepasa al stock existente
                ResultSet resultado;
                
                con= new bdConexion();
                java.sql.PreparedStatement pstm=(java.sql.PreparedStatement)
                con.getConnection().prepareStatement("SELECT cantidad FROM medicamentos WHERE IdMedicamento='"+cm+"'");
                //el estado=3, significa que la consulta se llevo a cabo por lo tanto la cita ya no esta vigente sino consumada
                resultado=pstm.executeQuery();

                int x=0;
                
                resultado.beforeFirst();

                while(resultado.next())
                {
                    //obtenemos los datos que necesitamos del producto
                    stkm=resultado.getDouble("cantidad");
                    x++;                        
                }

                //ahora pedimos al usuario que escriba la nueva cantidad del producto a vender
                String nCantidad = JOptionPane.showInputDialog("CANTIDAD:", cant);
                if (nCantidad.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Escriba la nueva cantidad","SICO",1);
                    nCantidad = JOptionPane.showInputDialog("CANTIDAD :", cant);
                }

                double c= Double.parseDouble(nCantidad);

                if (c<=0)
                {
                    JOptionPane.showMessageDialog(null, "Error la cantidad no puede ser cero o menor","SICO",0);
                }else if(c > stkm)
                {
                    txtCodigoMedicamento.setText("");
                    JOptionPane.showMessageDialog(null, "La cantidad introducida es mayor al Stock Actual '"+stkm+"' de este producto","SICO",2);
                }else //else b
                {
                    //multiplicamos para conocer el nuevo total que genera solo este producto
                    tot=(c*p);

                    //DecimalFormat df = new DecimalFormat("0.00"); 
                    //colocamos los nuevos valores de nuevo en la tablaFactura
                    tablaRecetaMedica.setValueAt(c,filas , 0);//colocamos el nuevo valor de la cantidad
                    tablaRecetaMedica.setValueAt("$ "+String.valueOf(tot), filas, 5);//aqui ponemos el valor del total de este producto

                    //tenemos que actualizar el total de la venta tambien, el que genera toda la factura        
                    if(c<can)//si la nueva cantidad es menor a la que estaba antes
                    {            
                        txtSubTotal.setText(String.valueOf(totalVenta-(t-tot)));
                        lblTotal.setText(String.valueOf(totalVenta-(t-tot)));                        
                    }else if(c>can)//si la nueva cantidad es mayor que la anterior
                    {
                        txtSubTotal.setText(String.valueOf(totalVenta+(tot-t)));
                        lblTotal.setText(String.valueOf(totalVenta+(tot-t)));                        
                    }else
                    {
                        JOptionPane.showMessageDialog(null, "La cantidad es igual a la anterior");
                    }                                               
                }//fin else b
                
            }
            catch(SQLException e)
            {
                System.out.println(e);
            }
        } //fin else b                  
    }
    
    //metodo para modificar el precio
    public void modificarPrecio()
    {
        double tot;
        //obtenemos el valor a pagar antes de modificar el precio, nos servira mas adelante y lo almacenamos en totalVenta.
        double totalVenta = Double.parseDouble(txtSubTotal.getText());
        
        
        int filas= tablaRecetaMedica.getSelectedRow();//obtenemos la fila seleccionada a modificar el precio
        if(filas<0)
        {
            JOptionPane.showMessageDialog(null, "Seleccione una fila de la tabla primero");
        }
        else //else a
        {
            String cant= String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 0));        
            String preUni =String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 4).toString().substring(2));
            String total=String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 5).toString().substring(2));

            double p = Double.parseDouble(preUni);
            double can = Double.parseDouble(cant);
            double t = Double.parseDouble(total);

            //pedimos el nuevo precio
            String nPrecio=JOptionPane.showInputDialog(null, "Escriba el nuevo precio",preUni);
            
            if(nPrecio.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Escriba el precio por Favor","SICO",0);
                nPrecio=JOptionPane.showInputDialog(null, "Escriba el nuevo precio",preUni);
            }
                double pre = Double.parseDouble(nPrecio);
                    
            if (pre <=0)
            {
                JOptionPane.showMessageDialog(null,"El precio introducido no puede ser cero o negativo","SICO",0);
            }else //else b
            {            
                //multiplicamos para conocer el nuevo total que genera solo este producto
                tot=(pre*can);

                //DecimalFormat df = new DecimalFormat("0.00"); 
                //colocamos los nuevos valores de nuevo en la tablaFactura
                tablaRecetaMedica.setValueAt("$ "+pre,filas ,4);//colocamos en nuevo valor del precio
                tablaRecetaMedica.setValueAt("$ "+String.valueOf(tot), filas, 5);//aqui ponemos el valor del total de este producto

                //tenemos que actualizar el total de la venta tambien, el que genera toda la factura        
                if(pre<p)//si el nuevo precio es menor a la que estaba antes
                {            
                    txtSubTotal.setText(String.valueOf(totalVenta-(t-tot)));
                    lblTotal.setText(String.valueOf(totalVenta-(t-tot)));                    
                }else if(pre>p)//si la nueva cantidad es mayor que la anterior
                {
                    txtSubTotal.setText(String.valueOf(totalVenta+(tot-t)));
                    lblTotal.setText(String.valueOf(totalVenta+(tot-t)));                    
                }else
                {
                    JOptionPane.showMessageDialog(null, "El precio digitado es igual al anterior");
                }
            }//fin else b
        }//fin else a           
    }
    
    //metodo para eliminar una fila seleccionada
    public void eliminarFila()
    {
        //obtenemos el valor a pagar antes de eliminar una fila, nos servira mas adelante y lo almacenamos en totalVenta.
        double totalVenta = Double.parseDouble(txtSubTotal.getText());
        
        
        int filas= tablaRecetaMedica.getSelectedRow();//obtenemos la fila seleccionada a eliminar
        if(filas<0)
        {
            JOptionPane.showMessageDialog(null, "Seleccione una fila de la tabla primero");
        }
        else
        {             
            int resp;
            resp=JOptionPane.showConfirmDialog(null,"¿Seguro/a que desea quitar este medicamento?","Pregunta",0);
            
            if (resp==0)
            {
                //antes de eliminar obtenemos el total del articulo seleccionado para actualizar la factura
                String total=String.valueOf(tablaRecetaMedica.getValueAt(tablaRecetaMedica.getSelectedRow(), 5).toString().substring(2));
                double t = Double.parseDouble(total);

                //obtenemos el modelo de la tabla factura y eliminamos la fila que este seleccionada
                DefaultTableModel dtm = (DefaultTableModel) tablaRecetaMedica.getModel();  
                dtm.removeRow(tablaRecetaMedica.getSelectedRow());

                //actualizamos el valor de la factura                 
                //DecimalFormat df = new DecimalFormat("#.00");
                //System.out.println(String.format("%.2f", number));
                txtSubTotal.setText(String.valueOf(totalVenta-t));
                lblTotal.setText(String.valueOf(totalVenta-t));                
            }                        
         }         
    }
    
    
    public void activaBotones(boolean mc, boolean mp, boolean qr)            
    {
        btnModificarCantidad.setEnabled(mc);
        btnModificarPrecio.setEnabled(mp);
        btnQuitarRenglon.setEnabled(qr);
       
    }
    
    //METOTO LIMPIAR CONTROLES
    
    private void limpiarControles()
    {
        txtIdPaciente.setText("");
        txtDui.setText("");
        txtNombrePacientes.setText("");
        txtDireccion.setText("");
        txtPais.setText("");
        txtCiudad.setText("");
        txtTelefono.setText("");
        txtCelular.setText("");
        txtEdad.setText("");
        
        txtIdServicio.setText("");
        txtNombreServicio.setText("");
        txtIdTratamiento.setText("");
        txtNombreTratamiento.setText("");
        txtPrecioTratamiento.setText("");
        
        txtIdEspecialista.setText("");
        txtNombreEspecialista.setText("");
        txtDiagnostico.setText("");
        
        lblNumeroConsulta.setText("");
        
        //para borrar los valores de la tablaRecetaM
        DefaultTableModel modelo = (DefaultTableModel) tablaRecetaMedica.getModel();
        while(modelo.getRowCount()>0)modelo.removeRow(0);
        
        txtSubTotal.setText("");
        lblTotal.setText("");
    }
    
    //METODO PARA ACTIVAR OPCIONES DE MENU
    private void activaOpciones(boolean n, boolean c, boolean g)
    {
        lblNuevo.setEnabled(n);
        lblCancelar.setEnabled(c);
        lblGuardar.setEnabled(g);
    }
    
    //METODO PARA OCULTAR CONTROLES ADICIONALES 
    private void ocultaOpciones(boolean a, boolean b, boolean c, boolean d, boolean hv, boolean ic)
    {
        txtFecha.setVisible(a);
        txtHoraSistema.setVisible(b);
        txtNumeroCita.setVisible(c);
        txtTipoConsulta.setVisible(d);
        jcHorariosVencidos.setVisible(hv);
        jcIC.setVisible(ic);
    }
    
    
    //METODO PARA ACTIVAR O BLOQUEAR LOS CONTROLES USADOS EN EL FORMULARIO
    public void activaControles(boolean ip, boolean np, boolean dui, boolean dirp, boolean pa, boolean ci, boolean tp, boolean cp, boolean ep, boolean is, boolean ns, boolean  it, boolean nt, boolean pt, boolean ie, boolean ne, boolean diag)
    {
        txtIdPaciente.setEditable(ip);
        txtNombrePacientes.setEditable(np);
        txtDui.setEditable(dui);
        txtDireccion.setEditable(dirp);
        txtPais.setEditable(pa);
        txtCiudad.setEditable(ci);
        txtTelefono.setEditable(tp);
        txtCelular.setEditable(cp);
        txtEdad.setEditable(ep);
        
        txtIdServicio.setEditable(is);
        txtNombreServicio.setEditable(ns);
        txtIdTratamiento.setEditable(it);
        txtNombreTratamiento.setEditable(nt);
        txtPrecioTratamiento.setEditable(pt);
        txtIdEspecialista.setEditable(ie);
        txtNombreEspecialista.setEditable(ne);
        txtDiagnostico.setEditable(diag);                        
    }
    
    //METODO PARA COLOCAR LOS DATOS DE LOS MEDICAMENTOS EN EL JCOMBO
    public final void comboMedicamento(){
    try
        {
            con = new bdConexion();
            java.sql.PreparedStatement pstm=(java.sql.PreparedStatement)
            con.getConnection().prepareStatement("SELECT * FROM medicamentos");
            ResultSet res=pstm.executeQuery();

           //BUCLE QUE PERMITE LLENAR EL COMBO
            while (res.next())
            {
//                jcMedicamentos.addItem (res.getString("nombreMedicamento"));
            }
            res.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }//fin combo medicamento
    
    
    //metodo para comprobar si la cita aun esta vigente o ya se vencio...
    public void citasVencidas()
    {
        String fecC=txtFecha.getText();        
        
        //realizar consulta a la bd para averiguar cuales horarios ya estan asignados segun la fecha actual
       int registros;
       try
        {
            con = new bdConexion();
            java.sql.PreparedStatement pstm=(java.sql.PreparedStatement)
            con.getConnection().prepareStatement("SELECT count(1) as total FROM citas WHERE fecha='"+fecC+"' AND estado=1");//cuenta cuantos registros existen con esta fecha
            ResultSet res=pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();

            if (registros <=0)//significa que no existen registros con la fecha asignada
            {
                //no hacemos nada puesto que no hay citas para este dia!!!
            }
            else
            { 
                jcHorariosVencidos.removeAllItems();
                jcIC.removeAllItems();
                
                con = new bdConexion();            
                java.sql.PreparedStatement pstm1=(java.sql.PreparedStatement)
                con.getConnection().prepareStatement("SELECT IdCita, hora FROM citas WHERE fecha='"+fecC+"' AND estado=1 ORDER BY hora");
                ResultSet res1=pstm1.executeQuery();                                
                
                //BUCLE QUE PERMITE LLENAR EL COMBO
                while (res1.next())
                {
                                 
                    if ("8:00 - 8:30 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("8:30 a.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    } 
                    else if ("8:30 - 9:00 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("9:00 a.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("9:00 - 9:30 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("9:30 a.m.");
                       jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("9:30 - 10:00 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("10:00 a.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("10:00 - 10:30 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("10:30 a.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("10:30 - 11:00 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("11:00 a.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("11:00 - 11:30 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("11:30 a.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("11:30 - 11:59 a.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("11:59 a.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("14:00 - 14:30 p.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("14:30 p.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("14:30 - 15:00 p.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("15:00 p.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("15:00 - 15:30 p.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("15:30 p.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("15:30 - 16:00 p.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("16:00 p.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else if ("16:00 - 16:30 p.m.".equals(res1.getString("hora")))
                    {
                        jcHorariosVencidos.addItem("16:30 p.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                    else
                    {
                        jcHorariosVencidos.addItem("17:00 p.m.");
                        jcIC.addItem(res1.getString("IdCita"));
                    }
                }               
               
            res1.close();
            }
            
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
       
       int nH=jcHorariosVencidos.getItemCount();
       String hs=txtHoraSistema.getText();
       
       for (int i=0; i<nH; i++)
       {
           String h=(String) jcHorariosVencidos.getModel().getElementAt(i);
           String ic=(String) jcIC.getModel().getElementAt(i);
           
           try
           {
               DateFormat dateFormat=new SimpleDateFormat("HH:mm");
               Date date1, date2;
               date1 = dateFormat.parse(hs);
               date2= dateFormat.parse(h);
               
               if (date1.compareTo(date2)>0)
               {
                   try
                    {
                        java.sql.PreparedStatement pstm=(java.sql.PreparedStatement)
                        con.getConnection().prepareStatement("UPDATE citas SET estado=2 WHERE IdCita='"+ic+"' AND fecha='"+fecC+"'");
                        pstm.executeUpdate();
                        pstm.close();
                    }
                    catch(SQLException e)
                    {
                        System.out.println(e);
                    }
                    updateTablaCitas();                    
               }
           }catch(ParseException parseException)
           {
               parseException.printStackTrace();
           }           
       }                     
       
    }
    
    //METODO PARA GENERAR NUEVO PACIENTE
    public void nuevaRecetaMedica()
    {
       btnAgregarMedicamento.setEnabled(true);
       //GENERAR CODIGO DE RECETA AUTOMANTICO
       int registros;
       try
        {
            java.sql.PreparedStatement pstm=(java.sql.PreparedStatement)
            con.getConnection().prepareStatement("SELECT count(1) as total FROM recetamedica");//cuenta el total de registros de la tabla paciente
            ResultSet res=pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();

            if (registros <=0)//significa que la tabla no tiene ningun registro
            {
                lblNumeroReceta.setText("000001");
            }
            else
            {                                  
//                con = new bdConexion();
                java.sql.PreparedStatement pstm1=(java.sql.PreparedStatement)
                con.getConnection().prepareStatement("SELECT MAX(IdReceta) as codigo FROM recetamedica");
                ResultSet res1=pstm1.executeQuery();


                res1.first();
                String v =res1.getString("codigo");

                int cod=(Integer.parseInt(v))+1;


                if ( cod<10)
                {
                    lblNumeroReceta.setText("00000"+cod);
                }
                else if(cod<100)
                {
                    lblNumeroReceta.setText("0000"+cod);
                }
                else if(cod<1000)
                {
                    lblNumeroReceta.setText("000"+cod);
                }
                else if(cod<10000)
                {
                    lblNumeroReceta.setText("00"+cod);
                }
                else if(cod<100000)
                {
                    lblNumeroReceta.setText("0"+cod);
                }
                else
                {
                    lblNumeroReceta.setText(v);
                }

            res1.close();
            }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }
    
    
    public void setAnchoColummnas()
    {
        JViewport scroll = (JViewport)tablaRecetaMedica.getParent();
        int ancho=scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna=tablaRecetaMedica.getColumnModel();
        TableColumn columnaTabla;
        for(int i=0; i<tablaRecetaMedica.getColumnCount();i++)
        {
            columnaTabla=modeloColumna.getColumn(i);
            switch(i)
            {
                case 0: anchoColumna=(10*ancho)/100;
                        break;
                case 1: anchoColumna=(10*ancho)/100;
                    break;
                case 2: anchoColumna=(25*ancho)/100;
                    break;
                case 3: anchoColumna=(30*ancho)/100;
                    break;
                case 4: anchoColumna=(10*ancho)/100;
                    break;
                case 5: anchoColumna=(15*ancho)/100;
                    break;                    
            }
            columnaTabla.setPreferredWidth(anchoColumna);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarTipoCita;
    private javax.swing.JButton btnAgregarMedicamento;
    private javax.swing.JButton btnBuscarEspecialista;
    private javax.swing.JButton btnBuscarServicio;
    private javax.swing.JButton btnBuscarTratamiento;
    private javax.swing.JButton btnGenerarReceta;
    private javax.swing.JButton btnGenerarReceta1;
    private javax.swing.JButton btnModificarCantidad;
    private javax.swing.JButton btnModificarPrecio;
    private javax.swing.JButton btnQuitarRenglon;
    private javax.swing.JDialog frmBuscarEspecialista;
    private javax.swing.JDialog frmBuscarMedicamentos;
    private javax.swing.JDialog frmBuscarServicio;
    private javax.swing.JDialog frmBuscarTratamiento;
    private javax.swing.JDialog frmMostrarCitas;
    private javax.swing.JDialog frmMostrarPacientes;
    private javax.swing.JDialog frmTipoConsulta;
    private javax.swing.ButtonGroup grupoBuscarCitas;
    private javax.swing.ButtonGroup grupoBuscarEspecialista;
    private javax.swing.ButtonGroup grupoBuscarPaciente;
    private javax.swing.ButtonGroup grupoBuscarServicio;
    private javax.swing.ButtonGroup grupoBuscarTratamiento;
    private javax.swing.ButtonGroup grupoTipoConsulta;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane1;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTaskPaneContainer1;
    private javax.swing.JComboBox jcHorariosVencidos;
    private javax.swing.JComboBox jcIC;
    private javax.swing.JLabel lblCancelar;
    private javax.swing.JLabel lblCerrar;
    private javax.swing.JLabel lblGuardar;
    private javax.swing.JLabel lblNuevo;
    private javax.swing.JLabel lblNumeroConsulta;
    private javax.swing.JLabel lblNumeroReceta;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JRadioButton optTipo1;
    private javax.swing.JRadioButton optTipo2;
    private javax.swing.JTabbedPane panelPestanas;
    private javax.swing.JTabbedPane panelReceta;
    private javax.swing.JTable tablaCitas;
    private javax.swing.JTable tablaEspecialista;
    private javax.swing.JTable tablaMedicamentos;
    private javax.swing.JTable tablaPacientes;
    private javax.swing.JTable tablaRecetaMedica;
    private javax.swing.JTable tablaServicios;
    private javax.swing.JTable tablaTratamientos;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCodigoMedicamento;
    private javax.swing.JTextArea txtDiagnostico;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtDui;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHoraSistema;
    private javax.swing.JTextField txtIdEspecialista;
    private javax.swing.JTextField txtIdPaciente;
    private javax.swing.JTextField txtIdServicio;
    private javax.swing.JTextField txtIdTratamiento;
    private javax.swing.JTextField txtNombreEspecialista;
    private javax.swing.JTextField txtNombrePacientes;
    private javax.swing.JTextField txtNombreServicio;
    private javax.swing.JTextField txtNombreTratamiento;
    private javax.swing.JTextField txtNumeroCita;
    private javax.swing.JTextField txtPais;
    private javax.swing.JTextField txtPrecioTratamiento;
    private javax.swing.JTextField txtSubTotal;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTipoConsulta;
    private javax.swing.JTextField txtValorBuscarE;
    private javax.swing.JTextField txtValorBuscarM;
    private javax.swing.JTextField txtValorBuscarPaciente;
    private javax.swing.JTextField txtValorBuscarS;
    private javax.swing.JTextField txtValorBuscarT;
    // End of variables declaration//GEN-END:variables
}
