package formularios;

import clases.bdConexion;
import clases.especialista;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author laptop-1
 */
public class frmEspecialista extends javax.swing.JInternalFrame {

    bdConexion con;
    especialista e = new especialista();
    Object[][] dtEspecialista; //variable de tipo Object que almacena una matriz de datos
    int fila=-1;
    
    {
        initComponents();
        comboRegion(); //llamada a la funcion comboPais
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXTaskPaneContainer1 = new org.jdesktop.swingx.JXTaskPaneContainer();
        jXTaskPane1 = new org.jdesktop.swingx.JXTaskPane();
        lblNuevo = new javax.swing.JLabel();
        lblModificar = new javax.swing.JLabel();
        lblBorrar = new javax.swing.JLabel();
        lblGuardar = new javax.swing.JLabel();
        lblCancelar = new javax.swing.JLabel();
        jXTaskPane2 = new org.jdesktop.swingx.JXTaskPane();
        jcBuscar = new javax.swing.JComboBox();
        txtValorBuscar = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        panelContenedor = new javax.swing.JPanel();
        panelPacientes = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jcCiudad = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcRegion = new javax.swing.JComboBox();
        txtModo = new javax.swing.JTextField();
        txtNumDui = new javax.swing.JFormattedTextField();
        txtTelefono = new javax.swing.JFormattedTextField();
        txtCelular = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEspecialista = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ESPECIALISTA");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jXTaskPaneContainer1.setBackground(java.awt.SystemColor.activeCaption);

        jXTaskPane1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Especialista.png"))); // NOI18N
        jXTaskPane1.setTitle("ESPECIALISTA");

        lblNuevo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_AddDataBase.png"))); // NOI18N
        lblNuevo.setText("Nuevo");
        lblNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNuevoMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblNuevo);

        lblModificar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblModificar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_edit.png"))); // NOI18N
        lblModificar.setText("Modificar");
        lblModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblModificarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblModificar);

        lblBorrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBorrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_delete.png"))); // NOI18N
        lblBorrar.setText("Borrar");
        lblBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBorrarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblBorrar);

        lblGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGuardar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_save.png"))); // NOI18N
        lblGuardar.setText("Guardar Cambios");
        lblGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGuardarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblGuardar);

        lblCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_refresh.png"))); // NOI18N
        lblCancelar.setText("Cancelar Cambios");
        lblCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblCancelar);

        jXTaskPaneContainer1.add(jXTaskPane1);

        jXTaskPane2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Search.png"))); // NOI18N
        jXTaskPane2.setTitle("Busqueda Por:");
        jXTaskPane2.setPreferredSize(new java.awt.Dimension(145, 160));
        jXTaskPane2.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcBuscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Doc. Indetidad", "Nombres", "Apellidos", "Pais", "Ciudad", "Telefono", "Celular" }));
        jXTaskPane2.getContentPane().add(jcBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 30, 129, 30));

        txtValorBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarKeyTyped(evt);
            }
        });
        jXTaskPane2.getContentPane().add(txtValorBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 85, 129, 30));

        jLabel10.setText("Buscar por:");
        jXTaskPane2.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, -1));

        jLabel11.setText("Valor a buscar:");
        jXTaskPane2.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 130, -1));

        jXTaskPaneContainer1.add(jXTaskPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelContenedor.setBackground(java.awt.SystemColor.activeCaption);

        panelPacientes.setBackground(java.awt.SystemColor.activeCaption);
        panelPacientes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Especialista", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N
        panelPacientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Codigo:");
        panelPacientes.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 25, 60, 25));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nº Doc. Identidad:");
        panelPacientes.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(232, 25, 120, 25));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombres:");
        panelPacientes.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 50, -1, 25));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Apellidos:");
        panelPacientes.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 50, -1, 25));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Dirección:");
        panelPacientes.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 75, -1, 25));

        txtCodigo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(255, 0, 51));
        panelPacientes.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 25, 140, 25));

        txtNombres.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombresKeyReleased(evt);
            }
        });
        panelPacientes.add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 200, 25));

        txtApellidos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidosKeyReleased(evt);
            }
        });
        panelPacientes.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 200, 25));

        txtDireccion.setColumns(10);
        txtDireccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDireccion.setLineWrap(true);
        txtDireccion.setRows(3);
        txtDireccion.setWrapStyleWord(true);
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDireccionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDireccion);

        panelPacientes.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 470, 50));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Teléfono:");
        panelPacientes.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 155, 60, 25));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Celular:");
        panelPacientes.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 155, -1, 25));

        jcCiudad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.add(jcCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 200, 25));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Region:");
        panelPacientes.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 130, 60, 25));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Ciudad:");
        panelPacientes.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 130, -1, 25));

        jcRegion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcRegionActionPerformed(evt);
            }
        });
        panelPacientes.add(jcRegion, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 200, 25));
        panelPacientes.add(txtModo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, -1));

        try {
            txtNumDui.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNumDui.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.add(txtNumDui, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 25, 200, 25));

        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefono.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 155, 200, 25));

        try {
            txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.add(txtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 155, 200, 25));

        tablaEspecialista.setBackground(new java.awt.Color(255, 255, 204));
        tablaEspecialista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablaEspecialista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEspecialista.setRowHeight(25);
        tablaEspecialista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEspecialistaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaEspecialista);

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaEspecialistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEspecialistaMouseClicked
        // MUESTRA CADA REGISTRO SELECCIONADO EN LOS CAMPOS CORRESPONDIENTES DEL FORMULARIO
        fila= tablaEspecialista.rowAtPoint(evt.getPoint());//obtiene el indice de la fila seleccionada

        if (fila>-1){

            /*colocamos en los campos del formulario, el valor correspondiente obtenido
             * de la posicion de la fila y de la posicion de la columna. 
            */
            txtCodigo.setText(String.valueOf(tablaEspecialista.getValueAt(fila, 0)));
            txtNumDui.setText(String.valueOf(tablaEspecialista.getValueAt(fila, 1)));
            txtNombres.setText(String.valueOf(tablaEspecialista.getValueAt(fila, 2)));
            txtApellidos.setText(String.valueOf(tablaEspecialista.getValueAt(fila, 3)));
            txtDireccion.setText(String.valueOf(tablaEspecialista.getValueAt(fila, 4)));
            jcRegion.setSelectedItem(String.valueOf(tablaEspecialista.getValueAt(fila, 5)));
            jcCiudad.setSelectedItem(String.valueOf(tablaEspecialista.getValueAt(fila, 6)));
            txtTelefono.setText(String.valueOf(tablaEspecialista.getValueAt(fila, 7)));
            txtCelular.setText(String.valueOf(tablaEspecialista.getValueAt(fila, 8)));            
        }

        activaOpciones(true,true,true,false,false);//procedimiento
        activaControles (false, false, false, false, false, false, false, false, false);//procedimiento
    }//GEN-LAST:event_tablaEspecialistaMouseClicked

    private void lblNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNuevoMouseClicked
        // TODO add your handling code here:
        nuevoEspecialista();//procedimiento  
    }//GEN-LAST:event_lblNuevoMouseClicked

    private void lblModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModificarMouseClicked
        // TODO add your handling code here:
        txtModo.setText("1");
        activaOpciones(false,false,false,true,true);//procedimiento
        activaControles(false,true,true,true,true,true,true,true,true);//procedimiento
    }//GEN-LAST:event_lblModificarMouseClicked

    private void lblBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBorrarMouseClicked
        // TODO add your handling code here:
        e.eliminarEspecialista(this.tablaEspecialista.getValueAt(this.tablaEspecialista.getSelectedRow(),0).toString());
        updateTabla();//procedimiento
        limpiarObjetos();//procedimiento
    }//GEN-LAST:event_lblBorrarMouseClicked

    private void lblGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGuardarMouseClicked
        // TODO add your handling code here:
        validarCampos();//procedimiento
    }//GEN-LAST:event_lblGuardarMouseClicked

    private void lblCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarMouseClicked
        // TODO add your handling code here:
        updateTabla();//procedimiento
        limpiarObjetos();//procedimiento
        activaOpciones (true, false, false, false,false);//procedimiento
        activaControles (false, false, false, false, false, false, false, false, false);//procedimiento
    }//GEN-LAST:event_lblCancelarMouseClicked

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        updateTabla();
        limpiarObjetos();
        activaOpciones (true, false, false, false,false);
        activaControles (false, false, false, false, false, false, false, false, false);
        txtModo.setVisible(false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void jcRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcRegionActionPerformed
        // TODO add your handling code here:
        comboCiudades(); //llamada al procedimiento comboCiudades
    }//GEN-LAST:event_jcRegionActionPerformed

    private void txtNombresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyReleased
        // TODO add your handling code here:
        String n = txtNombres.getText().toUpperCase();
        txtNombres.setText(n);
    }//GEN-LAST:event_txtNombresKeyReleased

    private void txtApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyReleased
        // TODO add your handling code here:
        String a = txtApellidos.getText().toUpperCase();
        txtApellidos.setText(a);
    }//GEN-LAST:event_txtApellidosKeyReleased

    private void txtDireccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyReleased
        // TODO add your handling code here:
        String d = txtDireccion.getText().toUpperCase();
        txtDireccion.setText(d);
    }//GEN-LAST:event_txtDireccionKeyReleased

    private void txtValorBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarKeyTyped
     
        int indice;
        String vBuscar="";
        
        String vValor = txtValorBuscar.getText();
        indice = jcBuscar.getSelectedIndex();

        switch (indice) 
        {
            case 1:  vBuscar = "nombres";
                     break;
            case 2:  vBuscar = "apellidos";
                     break;
            case 3:  vBuscar = "region";
                     break;
            case 4:  vBuscar = "ciudad";
                     break;
            case 5:  vBuscar = "telefono";
                     break;
            case 6:  vBuscar = "celular";
                     break; 
            default: 
                vBuscar = "dui";     
                break;
        } 
        
        try {            
            tablaEspecialista.setModel( e.buscarEspecialista(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtValorBuscarKeyTyped

    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA
    private void updateTabla(){
       String[] columNames = {"IdEspecialista", "DUI", "Nombres", "Apellidos", "Dirección", "Region","Ciudad","Teléfono","Celular"};
     //usamos la funcion
    dtEspecialista = e.getDatos();

    // se colocan los datos en la tabla
    DefaultTableModel datos= new DefaultTableModel(dtEspecialista,columNames);
    tablaEspecialista.setModel(datos);
    }
    
    //METODO PARA GENERAR NUEVO ESPECIALISTA
    public void nuevoEspecialista()
    {
       txtModo.setText("0");
       
       limpiarObjetos();
       activaOpciones (false, false, false, true,true);
       activaControles (false,true,true,true,true,true,true,true,true);

       //GENERAR CODIGO DE ESPECIALISTA AUTOMANTICO
       int registros=0;
       try
        {
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT count(1) as total FROM especialista");//cuenta el total de registros de la tabla especialista
            ResultSet res=pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();

            if (registros <=0)//significa que la tabla no tiene ningun registro
            {
                txtCodigo.setText("000001");
            }
            else
            {                                  
//                con = new bdConexion();
                PreparedStatement pstm1=(PreparedStatement)
                con.getConnection().prepareStatement("SELECT MAX(IdEspecialista) as codigo FROM especialista");
                ResultSet res1=pstm1.executeQuery();


                res1.first();
                String v =res1.getString("codigo");

                int cod=(Integer.parseInt(v))+1;


                if ( cod<10)
                {
                    txtCodigo.setText("00000"+cod);
                }
                else if(cod<100)
                {
                    txtCodigo.setText("0000"+cod);
                }
                else if(cod<1000)
                {
                    txtCodigo.setText("000"+cod);
                }
                else if(cod<10000)
                {
                    txtCodigo.setText("00"+cod);
                }
                else if(cod<100000)
                {
                    txtCodigo.setText("0"+cod);
                }
                else
                {
                    txtCodigo.setText(v);
                }

            res1.close();
            }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }
    
    //METODO GUARDAR ESPECIALISTA
    public void guardarEspecialista()
    {
        String nModo=txtModo.getText();
        int modo=Integer.parseInt(nModo);

        switch (modo)
        {
            case 0:

                    int resp;
                    resp=JOptionPane.showConfirmDialog(null,"¿Desea guardar el registro?","Pregunta",0);

                    if (resp==0)
                    {
                        String cespec = txtCodigo.getText();
                        String dui = txtNumDui.getText();
                        String nom = txtNombres.getText();
                        String ape = txtApellidos.getText();
                        String dir = txtDireccion.getText();
                        String re = jcRegion.getSelectedItem().toString();
                        String ci = jcCiudad.getSelectedItem().toString();
                        String tel = txtTelefono.getText();
                        String cel = txtCelular.getText();                        

                        e.nuevoEspecialista(cespec, dui, nom, ape, dir, re, ci, tel, cel);
                        updateTabla();

                        activaOpciones(true,false,false,false,false);
                        activaControles (false, false, false, false, false, false, false, false, false);
                        limpiarObjetos();

                    }
                    break;
            case 1://SIGNIFICA QUE ES UNA MODIFICACION

                        String cespec = txtCodigo.getText();
                        String dui = txtNumDui.getText();
                        String nom = txtNombres.getText();
                        String ape = txtApellidos.getText();
                        String dir = txtDireccion.getText();
                        String re = jcRegion.getSelectedItem().toString();
                        String ci = jcCiudad.getSelectedItem().toString();
                        String tel = txtTelefono.getText();
                        String cel = txtCelular.getText();                    

                        //ENVIAMOS LOS CAMPOS AL CONSTRUCTOR DE LA CLASE CLIENTES
                        e.modificarEspecialista(cespec, dui, nom, ape, dir, re, ci, tel, cel);
                        
                        //ACTUALIZAMOS LOS CAMPOS DE LA TABLA
                        updateTabla();
                        activaOpciones(true,false,false,false,false);
                        activaControles(false, false, false, false, false, false, false, false, false);
                        limpiarObjetos();
                        JOptionPane.showMessageDialog(null,"El regisgtro fue actualizado correctamente","Informacion",1);

                        break;
            default: JOptionPane.showMessageDialog(null,"Error al guardar el registro, intente otra vez");
        }
    }
    
    //METODO PARA ACTIVAR O BLOQUEAR LOS CONTROLES USADOS EN EL FORMULARIO
    public void activaControles(boolean ces, boolean dui, boolean no, boolean ap, boolean di, boolean re, boolean ci, boolean te, boolean ce)
    {
        txtCodigo.setEditable(ces);
        txtNumDui.setEditable(dui);
        txtNombres.setEditable(no);
        txtApellidos.setEditable(ap);
        txtDireccion.setEditable(di);
        jcRegion.setEnabled(re);
        jcCiudad.setEnabled(ci);
        txtTelefono.setEditable(te);
        txtCelular.setEditable(ce);       
    }
    
    //METODO PARA ACTIVAR O DESACTIVAR LAS OPCIONES DE CONTROL DEL FORMULARIO
    public void activaOpciones(boolean n, boolean m, boolean e, boolean g, boolean c)
    {
        lblNuevo.setEnabled(n);
        lblModificar.setEnabled(m);
        lblBorrar.setEnabled(e);
        lblGuardar.setEnabled(g);
        lblCancelar.setEnabled(c);
    }
    
    //METODO PARA LIMPIAR LOS OBJETOS
    public void limpiarObjetos()
    {
        txtCodigo.setText("");
        txtNumDui.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDireccion.setText("");
        jcRegion.setSelectedIndex(0);
        jcCiudad.setSelectedIndex(0);
        txtTelefono.setText("");
        txtCelular.setText("");              
    }
    
    //METODO EXTRAE DATOS DE LA TABLA REGION Y CONTRUYE EL COMBOBOX CON LOS REGION
    public final void comboRegion(){
    try
        {
            con = new bdConexion();
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT * FROM region ORDER BY Region ASC");
            ResultSet res=pstm.executeQuery();

           //BUCLE QUE PERMITE LLENAR EL COMBO
            while (res.next())
            {
                jcRegion.addItem (res.getString("Region"));
            }
            res.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }//fin combo paises
    
        /*METODO EXTRAE DATOS DE LA TABLA CIUDADES Y CONSTRUYE EL COMBOBOX CON LOS CIUDADES
        TOMANDO COMO BASE EL CODIGO DEL PAIS
      */
     public final void comboCiudades(){

     String region=(String) jcRegion.getSelectedItem().toString();    
     String codRegion = null;
        try
        {
            //con = new bdConexion();
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT Codigo FROM region"
                    + " WHERE Region='"+region+"'");
            ResultSet res=pstm.executeQuery();	

            //BUCLE QUE PERMITE LLENAR EL COMBO CON LAS CIUDADES PRODUCTO DE LA CONSULTA
            while (res.next())
            {
                codRegion = res.getString("Codigo");
            }
            res.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        try
        {
            /*CREAMOS LA CONEXION Y REALIZAMOS LA CONSULTA PARA OBTENER LOS DATOS DE LA TABLA CIUDADES
             SEGUN EL CODIGO DEL PAIS*/
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT * FROM ciudades WHERE Region_Codigo='"+codRegion+"' ORDER BY Ciudad ASC");
            ResultSet res1=pstm.executeQuery();

            jcCiudad.removeAllItems();//REMOVEMOS TODOS LOS ITEMS DEL COMBO

           //BUCLE QUE PERMITE LLENAR EL COMBO CON LAS CIUDADES PRODUCTO DE LA CONSULTA
            while (res1.next())
            {
                jcCiudad.addItem (res1.getString("Ciudad"));                
            }
            res1.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }    
    }//FIN METODO LLENAR COMBO CIUDADES
     
     
     //METODO PARA VALIDAR LOS CAMPOS DE TEXTO CUANDO ES UN REGISTRO NUEVO O MODIFICACION
    public void validarCampos()
    {
        
        if (txtNombres.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba el Nombre del Especialista");
            txtNombres.requestFocus();
        }
        else if (txtApellidos.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba el Apellido del Especialista");
            txtApellidos.requestFocus();
        }
        else if (txtDireccion.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba la Direccion del Especialista");
            txtDireccion.requestFocus();
        }
        else if (txtTelefono.getText().equals(txtCelular.getText()))
        {
            JOptionPane.showMessageDialog(null,"El numero de telefono y celular no pueden ser iguales");
            txtTelefono.setText("");
            txtCelular.setText("");
            txtTelefono.requestFocus();
        }
        else
        {
            //SI TODOS LOS CAMPOS ESTAN CORRECTOS, LLAMAMOS AL METODO GUARDAR
            guardarEspecialista();
        } 
    }
    
    //Validar el numero de DUI    
    public void validarDui() throws SQLException
    {
        //que no exista el dui duplicado
                String d=null;
                String v=null;
                v=txtNumDui.getText();
                
                try
                {

                    PreparedStatement pstm=(PreparedStatement)
                    con.getConnection().prepareStatement("SELECT dui FROM especialista");
                    ResultSet res1=pstm.executeQuery();


                    int x=0;
                    res1.last();

                    if(res1.getRow()<=0)
                    {
                        JOptionPane.showMessageDialog(null,"Ocurrio un  error en la consulta","SICO",0);                        

                    }
                    else
                    {                
                        res1.beforeFirst();

                        while(res1.next())
                        {

                            d= res1.getString("dui");                            

                            if (d.equals(v))
                            {
                                JOptionPane.showMessageDialog(null,"El numero de DUI '"+v+"' ya existe","SICO",0);

                            }

                            x++;
                        }                
                    }
                }
                catch(SQLException e)
                {
                    JOptionPane.showMessageDialog(null,"Error "+e.getMessage());
                }
                con.desconectar();
    }
    
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane1;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane2;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTaskPaneContainer1;
    private javax.swing.JComboBox jcBuscar;
    private javax.swing.JComboBox jcCiudad;
    private javax.swing.JComboBox jcRegion;
    private javax.swing.JLabel lblBorrar;
    private javax.swing.JLabel lblCancelar;
    private javax.swing.JLabel lblGuardar;
    private javax.swing.JLabel lblModificar;
    private javax.swing.JLabel lblNuevo;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JPanel panelPacientes;
    private javax.swing.JTable tablaEspecialista;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtModo;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JFormattedTextField txtNumDui;
    private javax.swing.JFormattedTextField txtTelefono;
    private javax.swing.JTextField txtValorBuscar;
    // End of variables declaration//GEN-END:variables
}
