package formularios;


import clases.bdConexion;
import clases.decimal;
import clases.paciente;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author laptop-1
 */
public class frmPaciente extends javax.swing.JInternalFrame {

    bdConexion con;
    paciente p = new paciente();
    Object[][] dtPaciente; //variable de tipo Object que almacena una matriz de datos
    int fila=-1;
    
    {
        initComponents();        
        comboRegion(); //llamada a la funcion comboPais
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXTaskPaneContainer1 = new org.jdesktop.swingx.JXTaskPaneContainer();
        jXTaskPane1 = new org.jdesktop.swingx.JXTaskPane();
        lblNuevoPaciente = new javax.swing.JLabel();
        lblModificarPaciente = new javax.swing.JLabel();
        lblBorrarPaciente = new javax.swing.JLabel();
        lblGuardarPaciente = new javax.swing.JLabel();
        lblCancelarCambios = new javax.swing.JLabel();
        jXTaskPane2 = new org.jdesktop.swingx.JXTaskPane();
        jcBuscar = new javax.swing.JComboBox();
        txtValorBuscar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        panelContenedor = new javax.swing.JPanel();
        panelPacientes = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigoPaciente = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jcRegion = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jcCiudad = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtModo = new javax.swing.JTextField();
        txtNumDni = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtEdad = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPacientes = new javax.swing.JTable();

        setBackground(java.awt.SystemColor.activeCaption);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("PACIENTES");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(java.awt.SystemColor.control);

        jXTaskPaneContainer1.setBackground(java.awt.SystemColor.control);
        jXTaskPaneContainer1.setInheritAlpha(false);

        jXTaskPane1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Pacientes.png"))); // NOI18N
        jXTaskPane1.setTitle("PACIENTES");

        lblNuevoPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNuevoPaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNuevoPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_AddDataBase.png"))); // NOI18N
        lblNuevoPaciente.setText("Nuevo Paciente");
        lblNuevoPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblNuevoPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNuevoPacienteMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblNuevoPaciente);

        lblModificarPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblModificarPaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblModificarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_edit.png"))); // NOI18N
        lblModificarPaciente.setText("Modificar Paciente");
        lblModificarPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblModificarPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblModificarPacienteMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblModificarPaciente);

        lblBorrarPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBorrarPaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBorrarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_delete.png"))); // NOI18N
        lblBorrarPaciente.setText("Borrar Paciente");
        lblBorrarPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblBorrarPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBorrarPacienteMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblBorrarPaciente);

        lblGuardarPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGuardarPaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGuardarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_save.png"))); // NOI18N
        lblGuardarPaciente.setText("Guardar Cambios");
        lblGuardarPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblGuardarPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGuardarPacienteMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblGuardarPaciente);

        lblCancelarCambios.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCancelarCambios.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCancelarCambios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_refresh.png"))); // NOI18N
        lblCancelarCambios.setText("Cancelar Cambios");
        lblCancelarCambios.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCancelarCambios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelarCambiosMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblCancelarCambios);

        jXTaskPaneContainer1.add(jXTaskPane1);

        jXTaskPane2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Search.png"))); // NOI18N
        jXTaskPane2.setTitle("Filtrar Datos:");
        jXTaskPane2.setPreferredSize(new java.awt.Dimension(137, 150));
        jXTaskPane2.getContentPane().setLayout(null);

        jcBuscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NÂ° Doc. Indetidad", "Nombres", "Apellidos", "Telefono", "Celular", "Ciudad" }));
        jXTaskPane2.getContentPane().add(jcBuscar);
        jcBuscar.setBounds(10, 30, 150, 30);

        txtValorBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorBuscarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarKeyTyped(evt);
            }
        });
        jXTaskPane2.getContentPane().add(txtValorBuscar);
        txtValorBuscar.setBounds(10, 83, 150, 30);

        jLabel11.setText("Valor a buscar:");
        jXTaskPane2.getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 65, 132, 16);

        jLabel12.setText("Buscar por:");
        jXTaskPane2.getContentPane().add(jLabel12);
        jLabel12.setBounds(10, 15, 130, 16);

        jXTaskPaneContainer1.add(jXTaskPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelContenedor.setBackground(java.awt.SystemColor.control);

        panelPacientes.setBackground(java.awt.SystemColor.activeCaption);
        panelPacientes.setForeground(new java.awt.Color(255, 255, 255));
        panelPacientes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Datos Pacientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N
        panelPacientes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Codigo:");
        panelPacientes.add(jLabel1);
        jLabel1.setBounds(16, 30, 63, 17);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("NÂº Doc. Indentidad:");
        panelPacientes.add(jLabel2);
        jLabel2.setBounds(265, 30, 140, 17);
        jLabel2.getAccessibleContext().setAccessibleName("NÂº Doc. Indentidad");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Nombres:");
        panelPacientes.add(jLabel3);
        jLabel3.setBounds(16, 55, 63, 17);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Apellidos:");
        panelPacientes.add(jLabel4);
        jLabel4.setBounds(325, 55, 80, 17);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("DirecciÃ³n:");
        panelPacientes.add(jLabel5);
        jLabel5.setBounds(16, 85, 63, 17);

        txtCodigoPaciente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCodigoPaciente.setForeground(new java.awt.Color(255, 0, 51));
        panelPacientes.add(txtCodigoPaciente);
        txtCodigoPaciente.setBounds(80, 28, 135, 25);

        txtNombres.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombresKeyReleased(evt);
            }
        });
        panelPacientes.add(txtNombres);
        txtNombres.setBounds(80, 54, 240, 25);

        txtApellidos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidosKeyReleased(evt);
            }
        });
        panelPacientes.add(txtApellidos);
        txtApellidos.setBounds(410, 54, 280, 25);

        txtDireccion.setColumns(1);
        txtDireccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDireccion.setLineWrap(true);
        txtDireccion.setRows(3);
        txtDireccion.setWrapStyleWord(true);
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDireccionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDireccion);

        panelPacientes.add(jScrollPane1);
        jScrollPane1.setBounds(80, 80, 610, 60);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Edad:");
        panelPacientes.add(jLabel6);
        jLabel6.setBounds(16, 167, 63, 25);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Telefono:");
        panelPacientes.add(jLabel7);
        jLabel7.setBounds(140, 170, 70, 25);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Email:");
        panelPacientes.add(jLabel8);
        jLabel8.setBounds(360, 170, 60, 25);

        jcRegion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcRegionActionPerformed(evt);
            }
        });
        panelPacientes.add(jcRegion);
        jcRegion.setBounds(80, 141, 240, 25);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Region:");
        panelPacientes.add(jLabel9);
        jLabel9.setBounds(16, 145, 63, 17);

        jcCiudad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.add(jcCiudad);
        jcCiudad.setBounds(410, 141, 280, 25);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Ciudad:");
        panelPacientes.add(jLabel10);
        jLabel10.setBounds(335, 145, 70, 17);
        panelPacientes.add(txtModo);
        txtModo.setBounds(440, 200, 30, 10);

        txtNumDni.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNumDni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumDniFocusLost(evt);
            }
        });
        txtNumDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumDniActionPerformed(evt);
            }
        });
        panelPacientes.add(txtNumDni);
        txtNumDni.setBounds(410, 28, 280, 25);

        txtTelefono.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.add(txtTelefono);
        txtTelefono.setBounds(220, 170, 150, 25);

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelPacientes.add(txtEmail);
        txtEmail.setBounds(420, 170, 270, 25);

        txtEdad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##"))));
        panelPacientes.add(txtEdad);
        txtEdad.setBounds(80, 167, 60, 25);

        tablaPacientes.setBackground(new java.awt.Color(255, 255, 204));
        tablaPacientes.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        tablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPacientes.setRowHeight(25);
        tablaPacientes.setShowHorizontalLines(true);
        tablaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPacientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaPacientes);

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPacientesMouseClicked
        // MUESTRA CADA REGISTRO SELECCIONADO EN LOS CAMPOS CORRESPONDIENTES DEL FORMULARIO
        fila= tablaPacientes.rowAtPoint(evt.getPoint());//obtiene el indice de la fila seleccionada

        if (fila>-1){

            /*colocamos en los campos del formulario, el valor correspondiente obtenido
             * de la posicion de la fila y de la posicion de la columna. 
            */
            txtCodigoPaciente.setText(String.valueOf(tablaPacientes.getValueAt(fila, 0)));
            txtNumDni.setText(String.valueOf(tablaPacientes.getValueAt(fila, 1)));
            txtNombres.setText(String.valueOf(tablaPacientes.getValueAt(fila, 2)));
            txtApellidos.setText(String.valueOf(tablaPacientes.getValueAt(fila, 3)));
            txtDireccion.setText(String.valueOf(tablaPacientes.getValueAt(fila, 4)));
            jcRegion.setSelectedItem(String.valueOf(tablaPacientes.getValueAt(fila, 5)));
            jcCiudad.setSelectedItem(String.valueOf(tablaPacientes.getValueAt(fila, 6)));
            txtEmail.setText(String.valueOf(tablaPacientes.getValueAt(fila, 7)));
            txtTelefono.setText(String.valueOf(tablaPacientes.getValueAt(fila, 8)));
            txtEdad.setText(String.valueOf(tablaPacientes.getValueAt(fila, 9)));            
        }

        activaOpciones(true,true,true,false,false);//procedimiento
        activaControles (false, false, false, false, false, false, false, false, false, false);//procedimiento
        
    }//GEN-LAST:event_tablaPacientesMouseClicked

    private void lblCancelarCambiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarCambiosMouseClicked
        // TODO add your handling code here:
        updateTabla();//procedimiento
        limpiarObjetos();//procedimiento
        activaOpciones (true, false, false, false,false);//procedimiento
        activaControles (false, false, false, false, false, false, false, false, false, false);//procedimiento
    }//GEN-LAST:event_lblCancelarCambiosMouseClicked

    private void lblModificarPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModificarPacienteMouseClicked
        // TODO add your handling code here:
       txtModo.setText("1");
       activaOpciones(false,false,false,true,true);//procedimiento
       activaControles(false,false,true,true,true,true,true,true,true,true);//procedimiento       
    }//GEN-LAST:event_lblModificarPacienteMouseClicked

    private void lblBorrarPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBorrarPacienteMouseClicked
        // TODO add your handling code here:
        p.eliminarPaciente(this.tablaPacientes.getValueAt(this.tablaPacientes.getSelectedRow(),0).toString());
        updateTabla();//procedimiento
        limpiarObjetos();//procedimiento
    }//GEN-LAST:event_lblBorrarPacienteMouseClicked

    private void lblNuevoPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNuevoPacienteMouseClicked
        // TODO add your handling code here:       
        txtNumDni.requestFocus();
        nuevoPaciente();//procedimiento        
    }//GEN-LAST:event_lblNuevoPacienteMouseClicked

    private void lblGuardarPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGuardarPacienteMouseClicked
        validarCampos();        
    }//GEN-LAST:event_lblGuardarPacienteMouseClicked

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        updateTabla();
        limpiarObjetos();
        activaOpciones (true, false, false, false,false);
        activaControles (false, false, false, false, false, false, false, false, false, false);
        txtModo.setVisible(false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void jcRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcRegionActionPerformed
        // TODO add your handling code here:
        comboCiudad(); //llamda al procedimiento comboMunicipio        
    }//GEN-LAST:event_jcRegionActionPerformed

    private void txtNombresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyReleased
        // TODO add your handling code here:
        String n = txtNombres.getText().toUpperCase();
        txtNombres.setText(n);
    }//GEN-LAST:event_txtNombresKeyReleased

    private void txtApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyReleased
        // TODO add your handling code here:
        String a = txtApellidos.getText().toUpperCase();
        txtApellidos.setText(a);
    }//GEN-LAST:event_txtApellidosKeyReleased

    private void txtDireccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyReleased
        // TODO add your handling code here:
        String d = txtDireccion.getText().toUpperCase();
        txtDireccion.setText(d);
    }//GEN-LAST:event_txtDireccionKeyReleased

    private void txtValorBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarKeyPressed
        
    }//GEN-LAST:event_txtValorBuscarKeyPressed

    private void txtValorBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarKeyTyped
        int indice;
        String vBuscar="";
        
        String vValor = txtValorBuscar.getText();
        indice = jcBuscar.getSelectedIndex();

        switch (indice) 
        {
            case 1:  vBuscar = "nombres";
                     break;
            case 2:  vBuscar = "apellidos";
                     break;
            case 3:  vBuscar = "telefono";
                     break;
            case 4:  vBuscar = "email";
                     break;
            case 5:  vBuscar = "ciudad";
                     break;                    
            default: 
                vBuscar = "dui";     
                break;
        }                
        
        try {
            //p.buscarPaciente(vBuscar, vValor);           
            tablaPacientes.setModel( p.buscarPaciente(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_txtValorBuscarKeyTyped

    private void txtNumDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumDniActionPerformed

    private void txtNumDniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumDniFocusLost
        
    }//GEN-LAST:event_txtNumDniFocusLost

    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA
    private void updateTabla(){
       String[] columNames = {"IdPaciente", "DUI", "Nombres", "Apellidos", "DirecciÃ³n", "Region","Ciudad","TelÃ©fono","Email", "Edad"};
        //usamos la funcion
        dtPaciente = p.getDatos();

        // se colocan los datos en la tabla
        DefaultTableModel datos= new DefaultTableModel(dtPaciente,columNames);
        tablaPacientes.setModel(datos);
    }
    
    //METODO PARA GENERAR NUEVO PACIENTE
    public void nuevoPaciente()
    {
       txtModo.setText("0");
       
       limpiarObjetos();
       activaOpciones (false, false, false, true,true);
       activaControles (false,true,true,true,true,true,true,true,true,true);

       //GENERAR CODIGO DE CLIENTE AUTOMANTICO
       int registros=0;
       try
        {
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT count(1) as total FROM paciente");//cuenta el total de registros de la tabla paciente
            ResultSet res=pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();

            if (registros <=0)//significa que la tabla no tiene ningun registro
            {
                txtCodigoPaciente.setText("000001");
            }
            else
            {                                  
//                con = new bdConexion();
                PreparedStatement pstm1=(PreparedStatement)
                con.getConnection().prepareStatement("SELECT MAX(IdPaciente) as codigo FROM paciente");
                ResultSet res1=pstm1.executeQuery();


                res1.first();
                String v =res1.getString("codigo");
                int cod=(Integer.parseInt(v))+1;


                if ( cod<10)
                {
                    txtCodigoPaciente.setText("00000"+cod);
                }
                else if(cod<100)
                {
                    txtCodigoPaciente.setText("0000"+cod);
                }
                else if(cod<1000)
                {
                    txtCodigoPaciente.setText("000"+cod);
                }
                else if(cod<10000)
                {
                    txtCodigoPaciente.setText("00"+cod);
                }
                else if(cod<100000)
                {
                    txtCodigoPaciente.setText("0"+cod);
                }
                else
                {
                    txtCodigoPaciente.setText(v);
                }

            res1.close();
            }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }
    
    //METODO GUARDAR CLIENTE
    public void guardarPaciente()
    {
        String nModo=txtModo.getText();
        int modo=Integer.parseInt(nModo);

        switch (modo)
        {
            case 0:

                    int resp;
                    resp=JOptionPane.showConfirmDialog(null,"Â¿Desea guardar el registro?","Pregunta",0);

                    if (resp==0)
                    {
                        String cpaciente = txtCodigoPaciente.getText();
                        String dui = txtNumDni.getText();
                        String nom = txtNombres.getText();
                        String ape = txtApellidos.getText();
                        String dir = txtDireccion.getText();
                        String re = jcRegion.getSelectedItem().toString();
                        String ci = jcCiudad.getSelectedItem().toString();
                        String em = txtEmail.getText();
                        String tel = txtTelefono.getText();
                        String edad = txtEdad.getText();                                                

                        p.nuevoPaciente(cpaciente, dui, nom, ape, dir, re, ci, tel, em, edad);
                        updateTabla();

                        activaOpciones(true,false,false,false,false);
                        activaControles (false, false, false, false, false, false, false, false, false, false);
                        limpiarObjetos();

                    }
                    break;
            case 1://SIGNIFICA QUE ES UNA MODIFICACION

                        String cpaciente = txtCodigoPaciente.getText();
                        String dui = txtNumDni.getText();
                        String nom = txtNombres.getText();
                        String ape = txtApellidos.getText();
                        String dir = txtDireccion.getText();
                        String re = jcRegion.getSelectedItem().toString();
                        String ci = jcCiudad.getSelectedItem().toString();
                        String em = txtEmail.getText();
                        String tel = txtTelefono.getText();
                        String edad = txtEdad.getText();


                        //ENVIAMOS LOS CAMPOS AL CONSTRUCTOR DE LA CLASE CLIENTES
                        p.modificarPaciente(cpaciente, dui, nom, ape, dir, re, ci, tel, em, edad);
                        
                        //ACTUALIZAMOS LOS CAMPOS DE LA TABLA
                        updateTabla();
                        activaOpciones(true,false,false,false,false);
                        activaControles(false, false, false, false, false, false, false, false, false, false);
                        limpiarObjetos();
                        JOptionPane.showMessageDialog(null,"El regisgtro fue actualizado correctamente","Informacion",1);

                        break;
            default: JOptionPane.showMessageDialog(null,"Error al guardar el registro, intente otra vez");
        }
    }
    
    //METODO PARA ACTIVAR O BLOQUEAR LOS CONTROLES USADOS EN EL FORMULARIO
    public void activaControles(boolean cp, boolean dui, boolean no, boolean ap, boolean di, boolean re, boolean ci, boolean te, boolean em, boolean ed)
    {
        txtCodigoPaciente.setEditable(cp);
        txtNumDni.setEditable(dui);
        txtNombres.setEditable(no);
        txtApellidos.setEditable(ap);
        txtDireccion.setEditable(di);
        jcRegion.setEnabled(re);
        jcCiudad.setEnabled(ci);
        txtEmail.setEditable(em);
        txtTelefono.setEditable(te);
        txtEdad.setEditable(ed);        
    }
    
    //METODO PARA ACTIVAR O DESACTIVAR LAS OPCIONES DE CONTROL DEL FORMULARIO
    public void activaOpciones(boolean n, boolean m, boolean e, boolean g, boolean c)
    {
        lblNuevoPaciente.setEnabled(n);
        lblModificarPaciente.setEnabled(m);
        lblBorrarPaciente.setEnabled(e);
        lblGuardarPaciente.setEnabled(g);
        lblCancelarCambios.setEnabled(c);
    }
    
    //METODO PARA LIMPIAR LOS OBJETOS
    public void limpiarObjetos()
    {
        txtCodigoPaciente.setText("");
        txtNumDni.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDireccion.setText("");
        jcRegion.setSelectedIndex(0);
        jcCiudad.setSelectedIndex(0);
        txtEmail.setText("");
        txtTelefono.setText("");
        txtEdad.setText("");        
    }
    
    //METODO EXTRAE DATOS DE LA TABLA PAISES Y CONTRUYE EL COMBOBOX CON LOS PAISES
    public final void comboRegion(){
    try
        {
            con = new bdConexion();
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT * FROM region");
            ResultSet res=pstm.executeQuery();

           //BUCLE QUE PERMITE LLENAR EL COMBO
            while (res.next())
            {
                jcRegion.addItem (res.getString("Region"));
            }
            res.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }//fin combo paises
    
    /*METODO EXTRAE DATOS DE LA TABLA MUNICIPIO Y CONSTRUYE EL COMBOBOX CON LOS MUNICIPIOS
    TOMANDO COMO BASE EL CODIGO DEL DEPARTAMENTO
  */
 public final void comboCiudad(){

     String region=(String) jcRegion.getSelectedItem().toString();    
     String codRegion = null;
        try
        {
            //con = new bdConexion();
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT Codigo FROM region WHERE Region='"+region+"'");
            ResultSet res=pstm.executeQuery();	

            //BUCLE QUE PERMITE LLENAR EL COMBO CON LAS CIUDADES PRODUCTO DE LA CONSULTA
            while (res.next())
            {
                codRegion = res.getString("Codigo");
            }
            res.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        try
        {
            /*CREAMOS LA CONEXION Y REALIZAMOS LA CONSULTA PARA OBTENER LOS DATOS DE LA TABLA CIUDADES
             SEGUN EL CODIGO DEL PAIS*/
            PreparedStatement pstm=(PreparedStatement)            
            con.getConnection().prepareStatement("SELECT * FROM ciudades WHERE Region_Codigo='"+codRegion+"'ORDER by Ciudad ASC");
            ResultSet res1=pstm.executeQuery();

            jcCiudad.removeAllItems();//REMOVEMOS TODOS LOS ITEMS DEL COMBO

           //BUCLE QUE PERMITE LLENAR EL COMBO CON LAS CIUDADES PRODUCTO DE LA CONSULTA
            while (res1.next())
            {
                jcCiudad.addItem (res1.getString("Ciudad"));                
            }
            res1.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }    
    }//FIN METODO LLENAR COMBO MUNICIPIO
 
 //METODO PARA VALIDAR LOS CAMPOS DE TEXTO CUANDO ES UN REGISTRO NUEVO O MODIFICACION

    public void validarCampos()
    {
        
        if (txtNombres.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba el Nombre del Paciente");
            txtNombres.requestFocus();
        }
        else if (txtApellidos.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba el Apellido del Paciente");
            txtApellidos.requestFocus();
        }
        else if (txtDireccion.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba la Direccion del Paciente");
            txtDireccion.requestFocus();
        }else if (txtEdad.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba la Edad del Paciente");
            txtEdad.requestFocus();
        }
        else if (txtTelefono.getText().equals("") && txtEmail.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Indique un numero de telefono o celular");                        
            txtEmail.requestFocus();
        
        }else
        {
            //SI TODOS LOS CAMPOS ESTAN CORRECTOS, LLAMAMOS AL METODO GUARDAR PACIENTE
            guardarPaciente();
        } 
    }
    
    //Validar el numero de DUI    
    public void validarDocIDentidad() throws SQLException {
        //que no exista el dui duplicado
        String d = null;
        String v = txtNumDni.getText();

        try {

            PreparedStatement pstm = (PreparedStatement) con.getConnection().prepareStatement("SELECT dui FROM paciente");
            ResultSet res1 = pstm.executeQuery();

            int x = 0;
            res1.last();

            if (res1.getRow() <= 0) {
                JOptionPane.showMessageDialog(null, "Ocurrio un  error en la consulta", "SICO", 0);

            } else {
                res1.beforeFirst();

                while (res1.next()) {

                    d = res1.getString("dui");

                    if (d.equals(v)) {
                        JOptionPane.showMessageDialog(null, "El numero del DNI '" + v + "' ya estÃ¡ registrado en el sistema", "SICO", 0);

                    }

                    x++;
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
        }       
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane1;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane2;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTaskPaneContainer1;
    private javax.swing.JComboBox jcBuscar;
    private javax.swing.JComboBox jcCiudad;
    private javax.swing.JComboBox jcRegion;
    private javax.swing.JLabel lblBorrarPaciente;
    private javax.swing.JLabel lblCancelarCambios;
    private javax.swing.JLabel lblGuardarPaciente;
    private javax.swing.JLabel lblModificarPaciente;
    private javax.swing.JLabel lblNuevoPaciente;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JPanel panelPacientes;
    private javax.swing.JTable tablaPacientes;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCodigoPaciente;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JFormattedTextField txtEdad;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtModo;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNumDni;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtValorBuscar;
    // End of variables declaration//GEN-END:variables
}
