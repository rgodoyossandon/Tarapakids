package formularios;

import clases.bdConexion;
import clases.decimal;
import clases.servicios;
import clases.tratamientos;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author laptop-1
 */
public class frmTratamientos extends javax.swing.JInternalFrame {

    bdConexion con;
    tratamientos t = new tratamientos();
    servicios ser = new servicios();
    Object[][] dtTratamientos; //variable de tipo Object que almacena una matriz de datos
    int fila=-1;
    
    {
        initComponents();
        comboServicios();
        //activaControlesEnabled(false, false, false, false,false);//procedimiento
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXTaskPaneContainer1 = new org.jdesktop.swingx.JXTaskPaneContainer();
        jXTaskPane1 = new org.jdesktop.swingx.JXTaskPane();
        lblNuevo = new javax.swing.JLabel();
        lblModificar = new javax.swing.JLabel();
        lblBorrar = new javax.swing.JLabel();
        lblGuardar = new javax.swing.JLabel();
        lblCancelar = new javax.swing.JLabel();
        jXTaskPane2 = new org.jdesktop.swingx.JXTaskPane();
        jcBuscar = new javax.swing.JComboBox();
        txtValorBuscar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        panelContenedor = new javax.swing.JPanel();
        panelPacientes = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombreTratamiento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTarifaTratamiento = new javax.swing.JTextField();
        txtModo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcionTratamiento = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jcServicios = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaTratamientos = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("TRATAMIENTOS");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jXTaskPaneContainer1.setBackground(java.awt.SystemColor.activeCaption);

        jXTaskPane1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Tratamiento.png"))); // NOI18N
        jXTaskPane1.setTitle("TRATAMIENTOS");

        lblNuevo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_AddDataBase.png"))); // NOI18N
        lblNuevo.setText("Nuevo Tratamiento");
        lblNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNuevoMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblNuevo);

        lblModificar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblModificar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_edit.png"))); // NOI18N
        lblModificar.setText("Modificar Tratamiento");
        lblModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblModificarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblModificar);

        lblBorrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBorrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_delete.png"))); // NOI18N
        lblBorrar.setText("Borrar Tratamiento");
        lblBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBorrarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblBorrar);

        lblGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGuardar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_save.png"))); // NOI18N
        lblGuardar.setText("Guardar Cambios");
        lblGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGuardarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblGuardar);

        lblCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_refresh.png"))); // NOI18N
        lblCancelar.setText("Cancelar Cambios");
        lblCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblCancelar);

        jXTaskPaneContainer1.add(jXTaskPane1);

        jXTaskPane2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Search.png"))); // NOI18N
        jXTaskPane2.setTitle("Busqueda Por:");
        jXTaskPane2.setPreferredSize(new java.awt.Dimension(166, 150));
        jXTaskPane2.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcBuscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nombreTratamiento" }));
        jXTaskPane2.getContentPane().add(jcBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 30, 155, 30));

        txtValorBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBuscarKeyTyped(evt);
            }
        });
        jXTaskPane2.getContentPane().add(txtValorBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 85, 155, 30));

        jLabel4.setText("Buscar por:");
        jXTaskPane2.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, -1));

        jLabel5.setText("Valor a buscar:");
        jXTaskPane2.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 160, -1));

        jXTaskPaneContainer1.add(jXTaskPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
        );

        panelContenedor.setBackground(java.awt.SystemColor.activeCaption);

        panelPacientes.setBackground(java.awt.SystemColor.activeCaption);
        panelPacientes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Datos Lista de Tratamientos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N
        panelPacientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Codigo:");
        panelPacientes.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 24, 130, 27));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nombre Tratamiento:");
        panelPacientes.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 80, -1, 27));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Descripción:");
        panelPacientes.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 110, 130, 27));

        txtCodigo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(255, 0, 51));
        panelPacientes.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 24, 111, 27));

        txtNombreTratamiento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombreTratamiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreTratamientoKeyReleased(evt);
            }
        });
        panelPacientes.add(txtNombreTratamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 590, 27));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Tarifa $:");
        panelPacientes.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 52, 130, 27));

        txtTarifaTratamiento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTarifaTratamiento.setForeground(new java.awt.Color(255, 0, 51));
        txtTarifaTratamiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTarifaTratamientoKeyReleased(evt);
            }
        });
        panelPacientes.add(txtTarifaTratamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 52, 111, 27));
        panelPacientes.add(txtModo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, -1, -1));

        txtDescripcionTratamiento.setColumns(20);
        txtDescripcionTratamiento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDescripcionTratamiento.setLineWrap(true);
        txtDescripcionTratamiento.setRows(5);
        txtDescripcionTratamiento.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtDescripcionTratamiento);

        panelPacientes.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 590, 70));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Servicio:");
        panelPacientes.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 52, 70, 27));

        jcServicios.setEditable(true);
        jcServicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Seleccione Servicio --" }));
        panelPacientes.add(jcServicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 52, 390, 27));

        tablaTratamientos.setBackground(new java.awt.Color(255, 255, 204));
        tablaTratamientos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablaTratamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaTratamientos.setRowHeight(25);
        tablaTratamientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTratamientosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaTratamientos);

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("SERVICIOS");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaTratamientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTratamientosMouseClicked
        // MUESTRA CADA REGISTRO SELECCIONADO EN LOS CAMPOS CORRESPONDIENTES DEL FORMULARIO
        fila= tablaTratamientos.rowAtPoint(evt.getPoint());//obtiene el indice de la fila seleccionada

        if (fila>-1){

            /*colocamos en los campos del formulario, el valor correspondiente obtenido
             * de la posicion de la fila y de la posicion de la columna. 
            */
            txtCodigo.setText(String.valueOf(tablaTratamientos.getValueAt(fila, 0)));                        
            txtNombreTratamiento.setText(String.valueOf(tablaTratamientos.getValueAt(fila, 1)));
            txtDescripcionTratamiento.setText(String.valueOf(tablaTratamientos.getValueAt(fila, 2)));
            txtTarifaTratamiento.setText(String.valueOf(tablaTratamientos.getValueAt(fila, 3)));
            jcServicios.setSelectedItem(String.valueOf(tablaTratamientos.getValueAt(fila, 4)));
                   
        }

        activaOpciones(true,true,true,false,false);
        activaControlesEditable(false, false, false);        
    }//GEN-LAST:event_tablaTratamientosMouseClicked

    private void lblNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNuevoMouseClicked
        // TODO add your handling code here:        
        txtTarifaTratamiento.requestFocus();
        nuevoTratamiento();//procedimiento
    }//GEN-LAST:event_lblNuevoMouseClicked

    private void lblModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModificarMouseClicked
        // TODO add your handling code here:
       txtModo.setText("1");
       activaOpciones(false,false,false,true,true);//procedimiento       
       activaControlesEditable(true, true, true);
       jcServicios.setEnabled(true);
    }//GEN-LAST:event_lblModificarMouseClicked

    private void lblBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBorrarMouseClicked
        // TODO add your handling code here:
        t.eliminarTratamiento(this.tablaTratamientos.getValueAt(this.tablaTratamientos.getSelectedRow(),0).toString());
        updateTabla();//procedimiento
        limpiarObjetos();//procedimiento
    }//GEN-LAST:event_lblBorrarMouseClicked

    private void lblGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGuardarMouseClicked
        
        try {
            guardarTratamiento();            
        } catch (SQLException ex) {
            Logger.getLogger(frmTratamientos.class.getName()).log(Level.SEVERE, null, ex);
        }
               
    }//GEN-LAST:event_lblGuardarMouseClicked

    private void lblCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarMouseClicked
        // TODO add your handling code here:
        updateTabla();//procedimiento
        limpiarObjetos();//procedimiento
        activaOpciones(true, false, false, false,false);//procedimiento
        activaControlesEditable(false, false, false);        
        //activaControlesEnabled(false, false, false, false,false);//procedimiento
        
    }//GEN-LAST:event_lblCancelarMouseClicked

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        updateTabla();
        limpiarObjetos();
        activaOpciones(true, false, false, false,false);        
        activaControlesEditable(false, false, false);
        jcServicios.setEnabled(false);
        //activaControlesEnabled(false, false, false, false,false);
        txtModo.setVisible(false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtNombreTratamientoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreTratamientoKeyReleased
         // TODO add your handling code here:
        String n = txtNombreTratamiento.getText().toUpperCase();
        txtNombreTratamiento.setText(n);
    }//GEN-LAST:event_txtNombreTratamientoKeyReleased

    private void txtTarifaTratamientoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTarifaTratamientoKeyReleased
         // TODO add your handling code here:
        txtTarifaTratamiento.setInputVerifier(new decimal());
    }//GEN-LAST:event_txtTarifaTratamientoKeyReleased

    private void txtValorBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBuscarKeyTyped
        
        String vBuscar="";
        String vValor="";
        vBuscar = (String) jcBuscar.getSelectedItem();
        vValor = txtValorBuscar.getText();
        try {
            //p.buscarPaciente(vBuscar, vValor);           
            tablaTratamientos.setModel( t.buscarTratamiento(vBuscar, vValor));
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtValorBuscarKeyTyped

    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA
    private void updateTabla() {
        String[] columNames = {"Id_Tratamiento", "Nombre Tratamiento", "Descripción", "Tarifa", "Servicio"};
        //usamos la funcion
        dtTratamientos = t.getDatos();

        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtTratamientos, columNames);
        tablaTratamientos.setModel(datos);        
        TableColumnModel columnModel = tablaTratamientos.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(20);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(200);
        columnModel.getColumn(3).setPreferredWidth(20);
        columnModel.getColumn(4).setPreferredWidth(80);
    }
    
    //METODO PARA GENERAR NUEVO SERVICIO
    public void nuevoTratamiento()
    {
       txtModo.setText("0");
       
       activaControlesEditable(true, true, true);
       jcServicios.setEnabled(true);
       limpiarObjetos();
       activaOpciones(false, false, false, true,true);
       
       //GENERAR CODIGO DEL SERVICIO AUTOMANTICO
       int registros=0;
       try
        {
            con = new bdConexion();
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT count(1) as total FROM tratamientos");//cuenta el total de registros de la tabla tratamientos
            ResultSet res=pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();

            if (registros <=0)//significa que la tabla no tiene ningun registro
            {
                txtCodigo.setText("001");
            }
            else
            {                                  
                con = new bdConexion();
                PreparedStatement pstm1=(PreparedStatement)
                con.getConnection().prepareStatement("SELECT MAX(IdTratamiento) as codigo FROM tratamientos");
                ResultSet res1=pstm1.executeQuery();

                res1.first();
                String v =res1.getString("codigo");

                int cod=(Integer.parseInt(v))+1;

                if ( cod<10)
                {
                    txtCodigo.setText("00"+cod);
                }
                else if(cod<100)
                {
                    txtCodigo.setText("0"+cod);
                }
                else
                {
                    txtCodigo.setText(v);
                }

            res1.close();
            }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }
    
    //METODO GUARDAR TRATAMIENTO
    public void guardarTratamiento() throws SQLException
    {
        String nModo = txtModo.getText();
        int modo = Integer.parseInt(nModo);

        /*Validamos si los campos no estan vacios*/
        if (txtNombreTratamiento.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escriba el Nombre del Tratamiento");
            txtNombreTratamiento.requestFocus();
        } else if (txtDescripcionTratamiento.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escriba la descripcion del Tratamiento");
            txtDescripcionTratamiento.requestFocus();
        } else if (txtTarifaTratamiento.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escriba el precio del Tratamiento");
            txtTarifaTratamiento.requestFocus();
        } else {
            /*Obtenemos el id del servicio que el usuario selecciono*/
            String cser = "";
            String nser = jcServicios.getSelectedItem().toString();
            String v = "'" + nser + "'";
            
            String sql = "SELECT IdServicio FROM servicios WHERE nombreServicio = " + v + "";
            PreparedStatement ps = con.getConnection().prepareStatement(sql);
            ResultSet resultado = ps.executeQuery();

            int x = 0;
            resultado.last();

            if (resultado.getRow() <= 0) {
                JOptionPane.showMessageDialog(null, "Elija un Servicio correcto");
            } else {
                cser = resultado.getString("IdServicio");

                switch (modo) {
                    case 0:

                        int resp;
                        resp = JOptionPane.showConfirmDialog(null, "¿Desea guardar el registro?", "Pregunta", 0);

                        if (resp == 0) {
                            /*Obtenemos los valores que digito el user*/
                            String ctrat = txtCodigo.getText();
                            String ntrat = txtNombreTratamiento.getText();
                            String destrat = txtDescripcionTratamiento.getText();
                            String tartrat = txtTarifaTratamiento.getText();

                            //ENVIAMOS LOS CAMPOS AL CONSTRUCTOR DE LA CLASE TRATAMIENTOS
                            t.nuevoTratamiento(ctrat, ntrat, destrat, tartrat, cser);
                            updateTabla();

                            activaOpciones(true, false, false, false, false);
                            activaControlesEditable(false, false, false);
                            jcServicios.setEnabled(false);
                            //activaControlesEnabled(false, false, false, false, false);
                            limpiarObjetos();

                        }
                        break;
                    case 1://SIGNIFICA QUE ES UNA MODIFICACION
                        /*Obtenemos los valores que digito el user*/
                        String ctrat = txtCodigo.getText();
                        String ntrat = txtNombreTratamiento.getText();
                        String destrat = txtDescripcionTratamiento.getText();
                        String tartrat = txtTarifaTratamiento.getText();

                        //ENVIAMOS LOS CAMPOS AL CONSTRUCTOR DE LA CLASE TRATAMIENTOS
                        t.modificarTratamiento(ctrat, ntrat, destrat, tartrat, cser);

                        //ACTUALIZAMOS LOS CAMPOS DE LA TABLA
                        updateTabla();
                        activaOpciones(true, false, false, false, false);
                        activaControlesEditable(false, false, false);
                        jcServicios.setEnabled(false);
                        
                        limpiarObjetos();
                        JOptionPane.showMessageDialog(null, "El regisgtro fue actualizado correctamente", "Informacion", 1);

                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "Error al guardar el registro, intente otra vez");
                }

            }

        }


        
    }
    
       
    public void activaControlesEditable(boolean nt, boolean dt, boolean tt)
    {
        //txtCodigo.setEditable(cs);
        txtNombreTratamiento.setEditable(nt);
        txtDescripcionTratamiento.setEditable(dt);
        txtTarifaTratamiento.setEditable(tt); 
        //jcServicios.setEnabled(se);
    }
    
    //METODO PARA ACTIVAR O DESACTIVAR LAS OPCIONES DE CONTROL DEL FORMULARIO
    public void activaOpciones(boolean n, boolean m, boolean e, boolean g, boolean c)
    {
        lblNuevo.setEnabled(n);
        lblModificar.setEnabled(m);
        lblBorrar.setEnabled(e);
        lblGuardar.setEnabled(g);        
        lblCancelar.setEnabled(c);        
    }
    
    //METODO PARA LIMPIAR LOS OBJETOS
    public void limpiarObjetos()
    {
        txtCodigo.setText("");
        txtNombreTratamiento.setText("");
        txtDescripcionTratamiento.setText("");       
        txtTarifaTratamiento.setText("");
        jcServicios.setSelectedIndex(0);
    }
    
    //METODO PARA VALIDAR LOS CAMPOS DE TEXTO CUANDO ES UN REGISTRO NUEVO O MODIFICACION
    
    public void validarCampos() throws SQLException
    {
        
        if (txtNombreTratamiento.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba el Nombre del Tratamiento");
            txtNombreTratamiento.requestFocus();
        }
        else if (txtDescripcionTratamiento.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba la descripcion del Tratamiento");
            txtDescripcionTratamiento.requestFocus();
        }
        else if (txtTarifaTratamiento.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Escriba el precio del Tratamiento");
            txtTarifaTratamiento.requestFocus();
        }
        else
        {
            //SI TODOS LOS CAMPOS ESTAN CORRECTOS, LLAMAMOS AL METODO GUARDAR SERVICIO
            //activaControlesEditable(false, false, false);
            guardarTratamiento();
        } 
    }
    
    
    //METODO EXTRAE DATOS DE LA TABLA PAISES Y CONTRUYE EL COMBOBOX CON LOS PAISES
    public final void comboServicios(){
            
        try
        {
            con = new bdConexion();
            PreparedStatement pstm=(PreparedStatement)
            con.getConnection().prepareStatement("SELECT * FROM servicios ORDER BY IdServicio");
            ResultSet res=pstm.executeQuery();

           //BUCLE QUE PERMITE LLENAR EL COMBO
            while (res.next())
            {
                jcServicios.addItem (res.getString("nombreServicio"));
            }
            res.close();
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }//fin combo paises
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane1;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane2;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTaskPaneContainer1;
    private javax.swing.JComboBox jcBuscar;
    private javax.swing.JComboBox<String> jcServicios;
    private javax.swing.JLabel lblBorrar;
    private javax.swing.JLabel lblCancelar;
    private javax.swing.JLabel lblGuardar;
    private javax.swing.JLabel lblModificar;
    private javax.swing.JLabel lblNuevo;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JPanel panelPacientes;
    private javax.swing.JTable tablaTratamientos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtDescripcionTratamiento;
    private javax.swing.JTextField txtModo;
    private javax.swing.JTextField txtNombreTratamiento;
    private javax.swing.JTextField txtTarifaTratamiento;
    private javax.swing.JTextField txtValorBuscar;
    // End of variables declaration//GEN-END:variables
}
