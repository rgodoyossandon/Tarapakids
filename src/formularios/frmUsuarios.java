package formularios;

import clases.bdConexion;
import clases.usuarios;
import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author laptop-1
 */
public class frmUsuarios extends javax.swing.JInternalFrame {

    bdConexion con;

    usuarios users = new usuarios();//instancia hacia la clase usuariosSistema para utilizar sus metodos
    Object[][] dtUsers; //variable de tipo Object que almacena una matriz de datos
    int fila = -1;

    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frmPermisosUsuarios = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigoUsuario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtContrasenia = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        btbGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cbGestionarPacientes = new javax.swing.JCheckBox();
        cbGestionarCitas = new javax.swing.JCheckBox();
        cbRealizarConsultas = new javax.swing.JCheckBox();
        cbReservarCitas = new javax.swing.JCheckBox();
        cbGestionarTratamientos = new javax.swing.JCheckBox();
        cbGestionarServicios = new javax.swing.JCheckBox();
        cbGestionarEspecialistas = new javax.swing.JCheckBox();
        cbGestionarMedicamentos = new javax.swing.JCheckBox();
        cbGestionarReportes = new javax.swing.JCheckBox();
        cbGestionarUsuarios = new javax.swing.JCheckBox();
        cbGestionarDatosEmpresa = new javax.swing.JCheckBox();
        cbGestionarBaseDatos = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtModo = new javax.swing.JTextField();
        btnAdministrador = new javax.swing.JButton();
        btnUsuario = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jXTaskPaneContainer1 = new org.jdesktop.swingx.JXTaskPaneContainer();
        jXTaskPane1 = new org.jdesktop.swingx.JXTaskPane();
        lblNuevo = new javax.swing.JLabel();
        lblModificar = new javax.swing.JLabel();
        lblBorrar = new javax.swing.JLabel();
        lblCerrar = new javax.swing.JLabel();
        panelContenedor = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();

        frmPermisosUsuarios.setTitle("Permisos de Usuario");
        frmPermisosUsuarios.setBounds(new java.awt.Rectangle(200, 200, 600, 500));
        frmPermisosUsuarios.setMinimumSize(new java.awt.Dimension(600, 500));
        frmPermisosUsuarios.setModal(true);
        frmPermisosUsuarios.setPreferredSize(new java.awt.Dimension(600, 500));
        frmPermisosUsuarios.setResizable(false);
        frmPermisosUsuarios.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                frmPermisosUsuariosWindowActivated(evt);
            }
        });
        frmPermisosUsuarios.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Codigo Usuario:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        jPanel2.add(txtCodigoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 5, 125, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Contrase√±a:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 45, -1, -1));

        txtContrasenia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtContrasenia.setForeground(new java.awt.Color(0, 0, 255));
        jPanel2.add(txtContrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 60, 125, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("Nombres:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombresKeyReleased(evt);
            }
        });
        jPanel2.add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 105, 290, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("Apellidos:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 135, 60, -1));

        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidosKeyReleased(evt);
            }
        });
        jPanel2.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 290, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 153));
        jLabel10.setText("Nombre de Usuario (Nick):");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 45, 150, -1));

        txtNombreUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNombreUsuario.setForeground(new java.awt.Color(0, 0, 255));
        txtNombreUsuario.setToolTipText("nickName");
        jPanel2.add(txtNombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 150, 30));

        frmPermisosUsuarios.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 320, 190));

        btbGuardar.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btbGuardar.setForeground(new java.awt.Color(0, 0, 153));
        btbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/32_database_save.png"))); // NOI18N
        btbGuardar.setText("Guardar");
        btbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbGuardarActionPerformed(evt);
            }
        });
        frmPermisosUsuarios.getContentPane().add(btbGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 450, 180, 40));

        btnCancelar.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(0, 0, 153));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/32_database_refresh.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        frmPermisosUsuarios.getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, 180, 40));

        jLabel9.setFont(new java.awt.Font("Arial Narrow", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("EL USUARIO TIENE PERMISO PARA:");
        frmPermisosUsuarios.getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 580, 30));

        jPanel3.setBackground(java.awt.SystemColor.activeCaption);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cbGestionarPacientes.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarPacientes.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarPacientes.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarPacientes.setText("Modificar Datos Pacientes");

        cbGestionarCitas.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarCitas.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarCitas.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarCitas.setText("Gestionar Citas");

        cbRealizarConsultas.setBackground(java.awt.SystemColor.activeCaption);
        cbRealizarConsultas.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbRealizarConsultas.setForeground(new java.awt.Color(0, 0, 153));
        cbRealizarConsultas.setText("Realizar Consultas");

        cbReservarCitas.setBackground(java.awt.SystemColor.activeCaption);
        cbReservarCitas.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbReservarCitas.setForeground(new java.awt.Color(0, 0, 153));
        cbReservarCitas.setText("Reservar Citas");

        cbGestionarTratamientos.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarTratamientos.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarTratamientos.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarTratamientos.setText("Modificar Tratamientos");

        cbGestionarServicios.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarServicios.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarServicios.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarServicios.setText("Modificar Servicios");

        cbGestionarEspecialistas.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarEspecialistas.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarEspecialistas.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarEspecialistas.setText("Modificar Datos del Especialista");

        cbGestionarMedicamentos.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarMedicamentos.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarMedicamentos.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarMedicamentos.setText("Modificar/Agregar Medicamentos");

        cbGestionarReportes.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarReportes.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarReportes.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarReportes.setText("Ver/Imprimir Reportes");

        cbGestionarUsuarios.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarUsuarios.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarUsuarios.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarUsuarios.setText("Modificar Usuarios");

        cbGestionarDatosEmpresa.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarDatosEmpresa.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarDatosEmpresa.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarDatosEmpresa.setText("Modificar Datos de la Empresa");

        cbGestionarBaseDatos.setBackground(java.awt.SystemColor.activeCaption);
        cbGestionarBaseDatos.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        cbGestionarBaseDatos.setForeground(new java.awt.Color(0, 0, 153));
        cbGestionarBaseDatos.setText("Manipular Base de Datos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Limpiar Todo");
        jLabel2.setToolTipText("Deselecciona todas las opciones marcadas");
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbGestionarPacientes)
                    .addComponent(cbGestionarCitas)
                    .addComponent(cbReservarCitas)
                    .addComponent(cbRealizarConsultas)
                    .addComponent(cbGestionarServicios)
                    .addComponent(cbGestionarTratamientos)
                    .addComponent(cbGestionarEspecialistas))
                .addGap(56, 56, 56)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbGestionarMedicamentos)
                    .addComponent(cbGestionarReportes)
                    .addComponent(cbGestionarUsuarios)
                    .addComponent(cbGestionarDatosEmpresa)
                    .addComponent(cbGestionarBaseDatos)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cbGestionarPacientes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarCitas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbReservarCitas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbRealizarConsultas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarServicios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarTratamientos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarEspecialistas))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cbGestionarMedicamentos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarReportes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarUsuarios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarDatosEmpresa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGestionarBaseDatos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        frmPermisosUsuarios.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 600, 200));
        frmPermisosUsuarios.getContentPane().add(txtModo, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, 10, -1));

        btnAdministrador.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnAdministrador.setForeground(new java.awt.Color(0, 0, 153));
        btnAdministrador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/32_key.png"))); // NOI18N
        btnAdministrador.setText("Administrador");
        btnAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdministradorActionPerformed(evt);
            }
        });
        frmPermisosUsuarios.getContentPane().add(btnAdministrador, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 85, 140, 40));

        btnUsuario.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnUsuario.setForeground(new java.awt.Color(0, 0, 153));
        btnUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/acept-32.png"))); // NOI18N
        btnUsuario.setText("Secretaria");
        btnUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioActionPerformed(evt);
            }
        });
        frmPermisosUsuarios.getContentPane().add(btnUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 128, 140, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/96_login.png"))); // NOI18N
        frmPermisosUsuarios.getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 100, 100));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 255));
        jLabel3.setText("ROLES:");
        frmPermisosUsuarios.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 70, 120));

        jButton1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 153));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Especialista.png"))); // NOI18N
        jButton1.setText("Especialista");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        frmPermisosUsuarios.getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 171, 140, 40));

        setBackground(java.awt.SystemColor.control);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("USUARIOS");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);

        jXTaskPaneContainer1.setBackground(java.awt.SystemColor.activeCaption);

        jXTaskPane1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/24_Pacientes.png"))); // NOI18N
        jXTaskPane1.setTitle("OPCIONES");

        lblNuevo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_AddDataBase.png"))); // NOI18N
        lblNuevo.setText("Nuevo Usuario");
        lblNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNuevoMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblNuevo);

        lblModificar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblModificar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_edit.png"))); // NOI18N
        lblModificar.setText("Modificar Usuario");
        lblModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblModificarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblModificar);

        lblBorrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBorrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_database_delete.png"))); // NOI18N
        lblBorrar.setText("Borrar Usuario");
        lblBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBorrarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblBorrar);

        lblCerrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCerrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/16_ListaPacientes.png"))); // NOI18N
        lblCerrar.setText("Cerrar Ventana");
        lblCerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCerrarMouseClicked(evt);
            }
        });
        jXTaskPane1.getContentPane().add(lblCerrar);

        jXTaskPaneContainer1.add(jXTaskPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jXTaskPaneContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelContenedor.setBackground(java.awt.SystemColor.activeCaption);

        tablaUsuarios.setBackground(new java.awt.Color(255, 255, 204));
        tablaUsuarios.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        tablaUsuarios.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaUsuarios);

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        // MUESTRA CADA REGISTRO SELECCIONADO EN LOS CAMPOS CORRESPONDIENTES DEL FORMULARIO
        fila = tablaUsuarios.rowAtPoint(evt.getPoint());//obtiene el indice de la fila seleccionada

        if (fila > -1) {

            /*colocamos en los campos del formulario, el valor correspondiente obtenido
             * de la posicion de la fila y de la posicion de la columna. 
             */
            txtCodigoUsuario.setText(String.valueOf(tablaUsuarios.getValueAt(fila, 0)));
            txtNombres.setText(String.valueOf(tablaUsuarios.getValueAt(fila, 1)));
            txtApellidos.setText(String.valueOf(tablaUsuarios.getValueAt(fila, 2)));
            txtNombreUsuario.setText(String.valueOf(tablaUsuarios.getValueAt(fila, 3)));
            txtContrasenia.setText(String.valueOf(tablaUsuarios.getValueAt(fila, 4)));
        }
        activaControles(false, false, false, false, false);
        activaBotones(true, true, true, true);//procedimiento     
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void lblNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNuevoMouseClicked
        // TODO add your handling code here:
        nuevoUsuario();
        seleccionarCheck(false, false, false, false, false, false, false, false, false, false, false, false);
        frmPermisosUsuarios.setVisible(true);
    }//GEN-LAST:event_lblNuevoMouseClicked

    private void lblModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModificarMouseClicked
        // TODO add your handling code here:
        txtModo.setText("1");
        activaControles(false, true, false, true, true);//procedimiento
        try {
            OpcionesChekdos();
        } catch (SQLException ex) {
            Logger.getLogger(frmUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        frmPermisosUsuarios.setVisible(true);
    }//GEN-LAST:event_lblModificarMouseClicked

    private void lblBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBorrarMouseClicked
        // TODO add your handling code here:
        users.eliminarUsuarios(this.tablaUsuarios.getValueAt(this.tablaUsuarios.getSelectedRow(), 0).toString());
        updateTabla();//procedimiento
    }//GEN-LAST:event_lblBorrarMouseClicked

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:        
        setAnchoColumnas();
        txtModo.setVisible(false);
        updateTabla();
        activaBotones(true, false, false, true);//procedimiento
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtNombresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyReleased
        // TODO add your handling code here:
        // convierte a mayusculas
        String n = txtNombres.getText().toUpperCase();
        txtNombres.setText(n);
    }//GEN-LAST:event_txtNombresKeyReleased

    private void txtApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyReleased
        // TODO add your handling code here:
        // convierte a mayusculas
        String n = txtApellidos.getText().toUpperCase();
        txtApellidos.setText(n);
    }//GEN-LAST:event_txtApellidosKeyReleased

    private void btbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbGuardarActionPerformed
        // metodo guardar usuarios
        guardarUsuarios();
    }//GEN-LAST:event_btbGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.frmPermisosUsuarios.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        seleccionarCheck(false, false, false, false, false, false, false, false, false, false, false, false);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btnAdministradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdministradorActionPerformed
        // TODO add your handling code here:
        seleccionarCheck(true, true, true, true, true, true, true, true, true, true, true, true);
    }//GEN-LAST:event_btnAdministradorActionPerformed

    private void btnUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioActionPerformed
        // TODO add your handling code here:
        seleccionarCheck(true, true, true, false, false, false, true, true, true, false, false, false);
    }//GEN-LAST:event_btnUsuarioActionPerformed

    private void frmPermisosUsuariosWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmPermisosUsuariosWindowActivated
        frmPermisosUsuarios.setSize(600, 530);
    }//GEN-LAST:event_frmPermisosUsuariosWindowActivated

    private void lblCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lblCerrarMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        seleccionarCheck(true, false, false, true, true, true, false, false, true, false, false, false);
    }//GEN-LAST:event_jButton1ActionPerformed

    //metodo para definir el ancho de las columnas de la tabla
    public void setAnchoColumnas() {
        JViewport scroll = (JViewport) tablaUsuarios.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tablaUsuarios.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tablaUsuarios.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (8 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (30 * ancho) / 100;
                    break;
                case 2:
                    anchoColumna = (30 * ancho) / 100;
                    break;
                case 3:
                    anchoColumna = (16 * ancho) / 100;
                    break;
                case 4:
                    anchoColumna = (16 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
        }
    }

    //METODO PARA ACTUALIZAR LOS REGISTROS DE LA TABLA
    private void updateTabla() {
        String[] columNames = {"C√≥digo", "Nombres", "Apellidos", "Nombre Usuario", "Constrase√±a"};
        //usamos la funcion
        dtUsers = users.getDatos();

        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtUsers, columNames);
        tablaUsuarios.setModel(datos);
    }

    //METODO PARA GENERAR NUEVO USUARIO
    public void nuevoUsuario() {
        txtModo.setText("0");
        limpiarObjetos();
//       activaBotones (false, false, false, true,true);
        activaControles(false, true, true, true, true);

        //GENERAR CODIGO DE USUARIO AUTOMATICAMENTE
        int registros = 0;
        //obtener la cantidad de registros que hay en la tabla usuarios
        try {
            con = new bdConexion();
            PreparedStatement pstm = (PreparedStatement) con.getConnection().prepareStatement("SELECT MAX(IdUsuario) as total FROM usuarios");
            ResultSet res = pstm.executeQuery();
            res.next();
            registros = (res.getInt("total")) + 1;
            res.close();
        } catch (SQLException e) {
            System.out.println(e);
        }

        if (registros <= 0)//significa que la tabla USUARIOS no tiene ningun registro
        {
            txtCodigoUsuario.setText("1");
            txtNombreUsuario.requestFocus();

        } else //Ya existe uno o mas usuarios
        {
            try {

                /*Obtenemos el ultimo idUsuario existente*/
                PreparedStatement pstm1 = (PreparedStatement) con.getConnection().prepareStatement("SELECT MAX(IdUsuario) as codigo FROM usuarios");
                ResultSet res1 = pstm1.executeQuery();

                res1.first();
                String v = res1.getString("codigo");

                int cod = (Integer.parseInt(v)) + 1;
                //Se lo asignamos al nuevo usuario
                txtCodigoUsuario.setText(String.valueOf(cod));
                txtNombreUsuario.requestFocus();

                res1.close();
            } catch (SQLException e) {
                System.out.println(e);
            }
        }
    }

    //METODO GUARDAR CATEGORIA
    public void guardarUsuarios() {
        String nModo = txtModo.getText();
        int modo = Integer.parseInt(nModo);

        //declaracion de variables a utilziar
        String gPac=null;
        String gCit=null;
        String rCit=null;
        String rCon=null;
        String gSer=null;
        String gTra=null;
        String gEsp=null;
        String gMed=null;
        String vRep=null;
        String gUsua=null;
        String gDEmp=null;
        String gBD=null;

        switch (modo) {
            case 0:// si es cero significa que es un nuevo usuario

                int resp;
                resp = JOptionPane.showConfirmDialog(null, "¬øDesea guardar el registro?", "Pregunta", 0);

                if (resp == 0) {
                    String cU = txtCodigoUsuario.getText();//codigo del usuario
                    String nU = txtNombres.getText(); //nombre real del usuario                                               
                    String aU = txtApellidos.getText();//apellido real del usuario
                    String nUs = txtNombreUsuario.getText();//apodo o nickname de usuario
                    String cUs = txtContrasenia.getText();//contrse√±a del usuario

                    //validmos si los campos estan vacios o no                                                
                    if (nUs.equals("")) {
                        JOptionPane.showMessageDialog(null, "Escriba un Nombre de usuario", "SICO", 1);
                        txtNombreUsuario.requestFocus();
                    } else if (cUs.equals("")) {
                        JOptionPane.showMessageDialog(null, "Escriba la Contrase√±a para el usuario", "SICO", 1);
                        txtContrasenia.requestFocus();
                    } else if (aU.equals("")) {
                        JOptionPane.showMessageDialog(null, "El campo Apellidos esta vacio", "SICO", 1);
                        txtApellidos.requestFocus();
                    } else if (nU.equals("")) {
                        JOptionPane.showMessageDialog(null, "El campo Nombres esta vacio", "SIFF", 1);
                        txtNombres.requestFocus();
                    } else {

                        //validar si el nickname ya existe en la base de datos o no.
                        try {
                            PreparedStatement pstm = (PreparedStatement) con.getConnection().prepareStatement("SELECT * FROM usuarios WHERE nombreUsuario='" + nUs + "'");
                            ResultSet res = pstm.executeQuery();
                            res.last();

                            if (res.getRow() <= 0)//significa que no encontro registro ,por lo tanto ese nombre de ese usuario no existe aun.
                            {
                                if (cbGestionarPacientes.isSelected()) {
                                    gPac = "1";
                                } else {
                                    gPac = "0";
                                }
                                if (cbGestionarCitas.isSelected()) {
                                    gCit = "1";
                                } else {
                                    gCit = "0";
                                }
                                if (cbReservarCitas.isSelected()) {
                                    rCit = "1";
                                } else {
                                    rCit = "0";
                                }
                                if (cbRealizarConsultas.isSelected()) {
                                    rCon = "1";
                                } else {
                                    rCon = "0";
                                }
                                if (cbGestionarServicios.isSelected()) {
                                    gSer = "1";
                                } else {
                                    gSer = "0";
                                }
                                //---------
                                if (cbGestionarTratamientos.isSelected()) {
                                    gTra = "1";
                                } else {
                                    gTra = "0";
                                }
                                if (cbGestionarEspecialistas.isSelected()) {
                                    gEsp = "1";
                                } else {
                                    gEsp = "0";
                                }
                                if (cbGestionarMedicamentos.isSelected()) {
                                    gMed = "1";
                                } else {
                                    gMed = "0";
                                }
                                if (cbGestionarReportes.isSelected()) {
                                    vRep = "1";
                                } else {
                                    vRep = "0";
                                }
                                if (cbGestionarUsuarios.isSelected()) {
                                    gUsua = "1";
                                } else {
                                    gUsua = "0";
                                }
                                //--------------
                                if (cbGestionarDatosEmpresa.isSelected()) {
                                    gDEmp = "1";
                                } else {
                                    gDEmp = "0";
                                }                               
                                if (cbGestionarBaseDatos.isSelected()) {
                                    gBD = "1";
                                } else {
                                    gBD = "0";
                                }

                                //Enviamos los datos al metodo nuevo usuario de la clase usuariosSistema
                                users.nuevoUsuario(cU, nU, aU, nUs, cUs, gPac, gCit, rCit, rCon, gSer, gTra, gEsp, gMed, vRep, gUsua, gDEmp, gBD);
                                updateTabla();

                                activaBotones(true, false, false, true);
                                activaControles(false, false, false, false, false);
                                limpiarObjetos();
                                this.frmPermisosUsuarios.dispose();

                            }//en caso contrario singifica que el usuario ya existe
                            else {
                                JOptionPane.showMessageDialog(null, "Este usuario '" + nUs + "' ya existe en la base de datos", "SICO", 1);
                                txtNombreUsuario.setText("");
                                txtNombreUsuario.requestFocus();
                            }
                        } catch (SQLException e) {
                            System.out.print(e);
                        }
                    }
                }
                break;
            case 1://SIGNIFICA QUE ES UNA MODIFICACION
                int respue;
                respue = JOptionPane.showConfirmDialog(null, "¬øDesea guardar el registro?", "Pregunta", 0);

                if (respue == 0) {
                    String cU = txtCodigoUsuario.getText();
                    String aU = txtApellidos.getText();
                    String nU = txtNombres.getText();
                    String nUs = txtNombreUsuario.getText();
                    String cUs = txtContrasenia.getText();

                    //validmos si los campos estan vacios o no                                                
                    if (nUs.equals("")) {
                        JOptionPane.showMessageDialog(null, "Escriba un Nombre de Usuario", "SIFF", 1);
                        txtNombreUsuario.requestFocus();
                    } else if (cUs.equals("")) {
                        JOptionPane.showMessageDialog(null, "Escriba la Contrase√±a para el usuario", "SIFF", 1);
                        txtContrasenia.requestFocus();
                    } else if (aU.equals("")) {
                        JOptionPane.showMessageDialog(null, "El campo Apellidos esta vacio", "SIFF", 1);
                        txtApellidos.requestFocus();
                    } else if (nU.equals("")) {
                        JOptionPane.showMessageDialog(null, "El campo Nombres esta vacio", "SIFF", 1);
                        txtNombres.requestFocus();
                    } else {

                        if (cbGestionarPacientes.isSelected()) {
                                    gPac = "1";
                                } else {
                                    gPac = "0";
                                }
                                if (cbGestionarCitas.isSelected()) {
                                    gCit = "1";
                                } else {
                                    gCit = "0";
                                }
                                if (cbReservarCitas.isSelected()) {
                                    rCit = "1";
                                } else {
                                    rCit = "0";
                                }
                                if (cbRealizarConsultas.isSelected()) {
                                    rCon = "1";
                                } else {
                                    rCon = "0";
                                }
                                if (cbGestionarServicios.isSelected()) {
                                    gSer = "1";
                                } else {
                                    gSer = "0";
                                }
                                //---------
                                if (cbGestionarTratamientos.isSelected()) {
                                    gTra = "1";
                                } else {
                                    gTra = "0";
                                }
                                if (cbGestionarEspecialistas.isSelected()) {
                                    gEsp = "1";
                                } else {
                                    gEsp = "0";
                                }
                                if (cbGestionarMedicamentos.isSelected()) {
                                    gMed = "1";
                                } else {
                                    gMed = "0";
                                }
                                if (cbGestionarReportes.isSelected()) {
                                    vRep = "1";
                                } else {
                                    vRep = "0";
                                }
                                if (cbGestionarUsuarios.isSelected()) {
                                    gUsua = "1";
                                } else {
                                    gUsua = "0";
                                }
                                //--------------
                                if (cbGestionarDatosEmpresa.isSelected()) {
                                    gDEmp = "1";
                                } else {
                                    gDEmp = "0";
                                }                               
                                if (cbGestionarBaseDatos.isSelected()) {
                                    gBD = "1";
                                } else {
                                    gBD = "0";
                                }

                        //ENVIAMOS LOS CAMPOS AL CONSTRUCTOR DE LA CLASE usuariosSistema
                        users.modificarUsuarios(cU, nU, aU, nUs, cUs, gPac, gCit, rCit, rCon, gSer, gTra, gEsp, gMed, vRep, gUsua, gDEmp, gBD);

                        //ACTUALIZAMOS LOS CAMPOS DE LA TABLA
                        updateTabla();
                        activaBotones(false, false, false, true);
                        activaControles(false, false, false, false, false);
                        limpiarObjetos();

                        JOptionPane.showMessageDialog(null, "El regisgtro fue actualizado correctamente", "Informacion", 1);
                        this.frmPermisosUsuarios.dispose();
                    }
                }
                break;
            default:
                JOptionPane.showMessageDialog(null, "Error al guardar el registro, intente otra vez");
        }
    }

    public void limpiarObjetos() {
        txtCodigoUsuario.setText("");
        txtApellidos.setText("");
        txtNombreUsuario.setText("");
        txtNombres.setText("");
        txtContrasenia.setText("");
    }

    public void activaControles(boolean cu, boolean nu, boolean nomU, boolean ap, boolean con) {
        txtCodigoUsuario.setEditable(cu);
        txtNombres.setEditable(nu);
        txtNombreUsuario.setEditable(nomU);
        txtApellidos.setEditable(ap);
        txtContrasenia.setEditable(con);
    }

    public void activaBotones(boolean n, boolean e, boolean m, boolean c) {
        lblNuevo.setEnabled(n);
        lblBorrar.setEnabled(e);
        lblModificar.setEnabled(m);
        lblCerrar.setEnabled(c);

    }

    //metodo para mostrar checadas las opciones segun el usuario que se desea modificar
    public void OpcionesChekdos() throws SQLException {

        //primero obtenemos el codigo del usuario a modificar
        String cU = txtCodigoUsuario.getText();
        
        String gPac=null;
        String gCit=null;
        String rCit=null;
        String rCon=null;
        String gSer=null;
        String gTra=null;
        String gEsp=null;
        String gMed=null;
        String vRep=null;
        String gUsua=null;
        String gDEmp=null;
        String gBD=null;
               
        if (cU.equals("")) {
            JOptionPane.showMessageDialog(null,"No hay un usuario seleccionado");
        } else {
            try {
                con = new bdConexion();
                java.sql.PreparedStatement pstm = (java.sql.PreparedStatement) con.getConnection().prepareStatement("SELECT * FROM usuarios WHERE  IdUsuario='" + cU + "'");
                ResultSet resultado = pstm.executeQuery();

                int x = 0;
                resultado.last();

                if (resultado.getRow() <= 0) {
                    JOptionPane.showMessageDialog(null, "Error, Seleccione un registro primero", "SICO", 1);

                } else {
                    resultado.beforeFirst();

                    while (resultado.next()) {

                        gPac = resultado.getString("modificarPaciente");
                        gCit = resultado.getString("gestionarCitas");
                        rCit = resultado.getString("reservarCitas");
                        rCon = resultado.getString("realizarConsultas");
                        gSer = resultado.getString("modificarServicios");
                        gTra = resultado.getString("modificarTratamientos");
                        gEsp = resultado.getString("modificarEspecialista");
                        gMed = resultado.getString("modificarMedicamentos");
                        vRep = resultado.getString("verImprimirReportes");
                        gUsua = resultado.getString("modificarUsuarios");
                        gDEmp = resultado.getString("modificarDatosEmpresa");
                        gBD = resultado.getString("manipularBD");

                        x++;
                    }

                    if (gPac.equals("1")) {
                        cbGestionarPacientes.setSelected(true);
                    } else {
                        cbGestionarPacientes.setSelected(false);
                    }
                    if (gCit.equals("1")) {
                        cbGestionarCitas.setSelected(true);
                    } else {
                        cbGestionarCitas.setSelected(false);
                    }
                    if (rCit.equals("1")) {
                        cbReservarCitas.setSelected(true);
                    } else {
                        cbReservarCitas.setSelected(false);
                    }
                    //-----------
                    if (rCon.equals("1")) {
                        cbRealizarConsultas.setSelected(true);
                    } else {
                        cbRealizarConsultas.setSelected(false);
                    }
                    if (gSer.equals("1")) {
                        cbGestionarServicios.setSelected(true);
                    } else {
                        cbGestionarServicios.setSelected(false);
                    }
                    if (gTra.equals("1")) {
                        cbGestionarTratamientos.setSelected(true);
                    } else {
                        cbGestionarTratamientos.setSelected(false);
                    }                    
                    //--------------------                  
                    if (gEsp.equals("1")) {
                        cbGestionarEspecialistas.setSelected(true);
                    } else {
                        cbGestionarEspecialistas.setSelected(false);
                    }
                    if (gMed.equals("1")) {
                        cbGestionarMedicamentos.setSelected(true);
                    } else {
                        cbGestionarMedicamentos.setSelected(false);
                    }
                    if (vRep.equals("1")) {
                        cbGestionarReportes.setSelected(true);
                    } else {
                        cbGestionarReportes.setSelected(false);
                    }
                    //-----------------------
                    if (gUsua.equals("1")) {
                        cbGestionarUsuarios.setSelected(true);
                    } else {
                        cbGestionarUsuarios.setSelected(false);
                    }
                    if (gDEmp.equals("1")) {
                        cbGestionarDatosEmpresa.setSelected(true);
                    } else {
                        cbGestionarDatosEmpresa.setSelected(false);
                    }                    
                    if (gBD.equals("1")) {
                        cbGestionarBaseDatos.setSelected(true);
                    } else {
                        cbGestionarBaseDatos.setSelected(false);
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
            }
            //con.desconectar();
        }

    }

    public void seleccionarCheck(boolean c1, boolean c2, boolean c3, boolean c4, boolean c5, boolean c6, boolean c7, boolean c8, boolean c9, boolean c10, boolean c11, boolean c12) {
        cbGestionarPacientes.setSelected(c1);
        cbGestionarCitas.setSelected(c2);
        cbReservarCitas.setSelected(c3);
        cbRealizarConsultas.setSelected(c4);
        cbGestionarServicios.setSelected(c5);                
        cbGestionarTratamientos.setSelected(c6);
        cbGestionarEspecialistas.setSelected(c7);
        cbGestionarMedicamentos.setSelected(c8);
        cbGestionarReportes.setSelected(c9);
        cbGestionarUsuarios.setSelected(c10);
        cbGestionarDatosEmpresa.setSelected(c11);
        cbGestionarBaseDatos.setSelected(c12);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbGuardar;
    private javax.swing.JButton btnAdministrador;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnUsuario;
    private javax.swing.JCheckBox cbGestionarBaseDatos;
    private javax.swing.JCheckBox cbGestionarCitas;
    private javax.swing.JCheckBox cbGestionarDatosEmpresa;
    private javax.swing.JCheckBox cbGestionarEspecialistas;
    private javax.swing.JCheckBox cbGestionarMedicamentos;
    private javax.swing.JCheckBox cbGestionarPacientes;
    private javax.swing.JCheckBox cbGestionarReportes;
    private javax.swing.JCheckBox cbGestionarServicios;
    private javax.swing.JCheckBox cbGestionarTratamientos;
    private javax.swing.JCheckBox cbGestionarUsuarios;
    private javax.swing.JCheckBox cbRealizarConsultas;
    private javax.swing.JCheckBox cbReservarCitas;
    private javax.swing.JDialog frmPermisosUsuarios;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane1;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTaskPaneContainer1;
    private javax.swing.JLabel lblBorrar;
    private javax.swing.JLabel lblCerrar;
    private javax.swing.JLabel lblModificar;
    private javax.swing.JLabel lblNuevo;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCodigoUsuario;
    private javax.swing.JTextField txtContrasenia;
    private javax.swing.JTextField txtModo;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
